{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/shaders/basevertexshader.glsl","webpack:///./src/shaders/bubblevertexshader.glsl","webpack:///./src/shaders/bubblefragmentshader.glsl","webpack:///./src/shaders/causticsvertexshader.glsl","webpack:///./src/shaders/causticsfragmentshader.glsl","webpack:///./src/shaders/cubevertexshader.glsl","webpack:///./src/shaders/cubefragmentshader.glsl","webpack:///./src/shaders/spherevertexshader.glsl","webpack:///./src/shaders/spherefragmentshader.glsl","webpack:///./src/shaders/watervertexshader.glsl","webpack:///./src/shaders/waterfragmentshader.glsl","webpack:///./src/shaders/dropfragmentshader.glsl","webpack:///./src/shaders/normalfragmentshader.glsl","webpack:///./src/shaders/movebubblefragmentshader.glsl","webpack:///./src/shaders/movespherefragmentshader.glsl","webpack:///./src/shaders/removebubblefragmentshader.glsl","webpack:///./src/shaders/updatefragmentshader.glsl","webpack:///./src/js/lightgl.js","webpack:///./src/js/constants.js","webpack:///./src/js/bubble.js","webpack:///./src/js/cubemap.js","webpack:///./src/js/renderer.js","webpack:///./src/js/sphere.js","webpack:///./src/js/water.js","webpack:///./src/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gl","GL","options","immediateMode","context","canvas","document","createElement","width","height","alpha","getContext","e","Error","HALF_FLOAT_OES","MODELVIEW","ENUM","PROJECTION","tempMatrix","Matrix","resultMatrix","modelviewMatrix","projectionMatrix","matrix","stack","modelviewStack","projectionStack","matrixMode","loadIdentity","identity","loadMatrix","from","to","multMatrix","multiply","perspective","fov","aspect","near","far","frustum","b","f","ortho","scale","x","y","z","translate","rotate","a","lookAt","ex","ey","ez","cx","cy","cz","ux","uy","uz","pushMatrix","push","Array","slice","popMatrix","pop","hasFloat32Array","Float32Array","project","objX","objY","objZ","modelview","projection","viewport","getParameter","VIEWPORT","point","transformPoint","Vector","unProject","winX","winY","winZ","inverse","addMatrixStack","mesh","Mesh","coords","colors","triangles","coord","color","pointSize","shader","Shader","uniforms","begin","vertices","g","arguments","length","toArray","concat","texCoord","vertex","end","compile","useTexture","TEXTURE_BINDING_2D","draw","oldX","oldY","buttons","hasOld","has","isDragging","augment","original","callback","apply","pageX","pageY","obj","offsetParent","offsetLeft","offsetTop","deltaX","deltaY","dragging","preventDefault","stopPropagation","mousemove","onmousemove","mouseup","which","off","on","onmouseup","reset","onmousedown","addEventListeners","makeCurrent","animate","post","window","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","setTimeout","time","Date","getTime","update","now","onupdate","ondraw","fullscreen","top","paddingTop","left","paddingLeft","right","paddingRight","bottom","paddingBottom","body","resize","innerWidth","innerHeight","camera","appendChild","style","overflow","position","keys","Indexer","Buffer","HitTest","Raytracer","Texture","mapKeyCode","code","8","9","13","16","27","32","37","38","39","40","String","fromCharCode","element","addEventListener","removeEventListener","altKey","ctrlKey","metaKey","keyCode","this","unique","indices","map","target","type","buffer","data","vertexBuffers","indexBuffers","addVertexBuffer","normals","addIndexBuffer","lines","transpose","v","divide","transformVector","result","det","Math","tan","PI","sqrt","cos","sin","u","subtract","unit","cross","dot","add","JSON","stringify","spacing","round","createBuffer","bindBuffer","bufferData","STATIC_DRAW","attribute","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","Uint16Array","transform","fromArray","invTrans","computeNormals","normal","computeWireframe","indexer","j","min","max","getAABB","aabb","Number","MAX_VALUE","negative","getBoundingSphere","sphere","center","radius","plane","detailX","detail","detailY","cubeData","pickOctant","hit","axisX","axisY","axisZ","offset","eye","minX","maxX","minY","maxY","ray00","ray10","ray01","ray11","regexMap","regex","text","exec","cube","tri","flip","fix","octant","load","json","mergeWith","other","getRayForPixel","ray0","lerp","ray1","hitTestBox","origin","ray","tMin","tMax","t1","t2","tNear","tFar","hitTestSphere","discriminant","hitTestTriangle","ab","ac","toHit","dot00","dot01","dot02","dot11","dot12","LIGHTGL_PREFIX","vertexSource","fragmentSource","followScriptTagById","id","getElementById","header","source","usedMatrices","replaced","match","substr","replace","RegExp","compileSource","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","groups","indexOf","capitalLetters","MVPM","program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributes","uniformLocations","isSampler","isNumber","str","toString","framebuffer","renderbuffer","checkerboardCanvas","createTexture","format","RGBA","UNSIGNED_BYTE","magFilter","filter","LINEAR","minFilter","FLOAT","canUseFloatingPointTextures","NEAREST","canUseFloatingPointLinearFiltering","canUseHalfFloatingPointTextures","canUseHalfFloatingPointLinearFiltering","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","wrap","wrapS","CLAMP_TO_EDGE","TEXTURE_WRAP_T","wrapT","texImage2D","useProgram","location","getUniformLocation","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix3fv","uniformMatrix4fv","uniform1i","uniform1f","drawBuffers","LINES","TRIANGLES","indexBuffer","used","MVM","PM","MVMI","NM","PMI","MVPMI","matrices","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","disableVertexAttribArray","drawElements","UNSIGNED_SHORT","drawArrays","activeTexture","TEXTURE0","unbind","canDrawTo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","drawTo","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","swapWith","temp","fromImage","image","texture","protocol","generateMipmap","fromURL","url","fillStyle","fillRect","Image","onload","src","getExtension","equals","toAngles","theta","atan2","phi","asin","angleTo","acos","clone","init","fromAngles","randomDirection","random","fraction","angleBetween","G","Bubble","_center","_radius","_initVelocity","oldCenter","velocity","updateCenter","_newCenter","updateVelocity","_velocity","simulate","_delta","percentUnderWater","abs","getVolume","pow","Cubemap","images","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_NEGATIVE_X","RGB","xneg","TEXTURE_CUBE_MAP_POSITIVE_X","xpos","TEXTURE_CUBE_MAP_NEGATIVE_Y","yneg","TEXTURE_CUBE_MAP_POSITIVE_Y","ypos","TEXTURE_CUBE_MAP_NEGATIVE_Z","zneg","TEXTURE_CUBE_MAP_POSITIVE_Z","zpos","Renderer","tileTexture","LINEAR_MIPMAP_LINEAR","REPEAT","lightDir","waterMesh","waterShaders","sphereMesh","sphereShader","bubbleMesh","bubbleShader","cubeMesh","splice","cubeShader","causticTex","causticsShader","updateCaustics","water","hasDerivatives","this_","clear","COLOR_BUFFER_BIT","textureA","light","sphereCenter","sphereRadius","renderWater","sky","tracer","enable","CULL_FACE","cullFace","BACK","FRONT","tiles","isUnderWater","disable","renderBubble","bubble","renderSphere","renderCube","Sphere","Water","textureB","dropShader","updateShader","normalShader","removeBubbleShader","addDrop","strength","removeBubble","newCenter","moveSingleBubble","moveSphere","stepSimulation","delta","updateNormals","onerror","html","text2html","loading","innerHTML","zIndex","bubbles","timeStamp","vrDisplay","angleX","angleY","useSpherePhysics","paused","frameData","VRFrameData","console","log","navigator","getVRDisplays","then","displays","display","capabilities","canPresent","requestPresent","ratio","devicePixelRatio","help","Matrixrize","lm","onresize","getFrameData","animating","nextTime","seconds","MODE_MOVE_SPHERE","forEach","aliveBubbles","isAlive","prevTime","leftProjectionMatrix","leftViewMatrix","rightProjectionMatrix","rightViewMatrix","clientWidth","DEPTH_BUFFER_BIT","leftpjm","leftvwm","rightpjm","rightvwm","submitFrame","clearColor","prevHit","planeNormal","MODE_ADD_DROPS","MODE_ORBIT_CAMERA","startDrag","pointOnPlane","sphereHitTest","duringDrag","nextHit","stopDrag","isHelpElement","parentNode","ontouchstart","touches","ontouchmove","ontouchend","onkeydown","charCodeAt","L","DEPTH_TEST","drawVR","warn"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nvarying vec2 coord;\\nvarying vec3 position;\\n\\nvoid main() {\\n  coord = gl_Vertex.xy * 0.5 + 0.5;\\n  position = gl_Vertex.xyz;\\n  gl_Position = vec4(gl_Vertex.xyz, 1.0);\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform vec3 sphereCenter;\\nuniform float sphereRadius;\\n\\nvarying vec3 position;\\nvarying vec3 actualPosition;\\n\\nvoid main() {\\n  position = sphereCenter + gl_Vertex.xyz * sphereRadius + (1.0 - 0.1 * gl_Vertex.z) * sphereRadius;\\n  actualPosition = sphereCenter + gl_Vertex.xyz * sphereRadius;\\n  gl_Position = gl_ModelViewProjectionMatrix * vec4(position, 1.0);\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nconst float IOR_AIR = 1.0;\\nconst float IOR_WATER = 1.333;\\nconst vec3 abovewaterColor = vec3(0.25, 1.0, 1.25);\\nconst vec3 underwaterColor = vec3(0.4, 0.9, 1.0);\\nconst float poolHeight = 1.0;\\nuniform vec3 light;\\nuniform vec3 sphereCenter;\\nuniform float sphereRadius;\\nuniform sampler2D tiles;\\nuniform sampler2D causticTex;\\nuniform sampler2D water;\\n\\nuniform vec3 eye;\\nvarying vec3 position;\\nvarying vec3 actualPosition;\\nuniform samplerCube sky;\\n\\nvec3 getSurfaceRayColor(vec3 origin, vec3 ray, vec3 waterColor, int t);\\n\\nvec2 intersectCube(vec3 origin, vec3 ray, vec3 cubeMin, vec3 cubeMax) {\\n  vec3 tMin = (cubeMin - origin) / ray;\\n  vec3 tMax = (cubeMax - origin) / ray;\\n  vec3 t1 = min(tMin, tMax);\\n  vec3 t2 = max(tMin, tMax);\\n  float tNear = max(max(t1.x, t1.y), t1.z);\\n  float tFar = min(min(t2.x, t2.y), t2.z);\\n  return vec2(tNear, tFar);\\n}\\n\\nfloat intersectSphere(vec3 origin, vec3 ray, vec3 sphereCenter, float sphereRadius) {\\n  vec3 toSphere = origin - sphereCenter;\\n  float a = dot(ray, ray);\\n  float b = 2.0 * dot(toSphere, ray);\\n  float c = dot(toSphere, toSphere) - sphereRadius * sphereRadius;\\n  float discriminant = b*b - 4.0*a*c;\\n  if (discriminant > 0.0) {\\n    float t1 = (-b - sqrt(discriminant)) / (2.0 * a);\\n    float t2 = (-b + sqrt(discriminant)) / (2.0 * a);\\n    if (t1 > 0.0) return t1;\\n    else if (t2 > 0.0) return t2;\\n  }\\n  return 1.0e6;\\n}\\n\\nvec3 getBubbleColor(vec3 point, int t) {\\n  vec3 color = vec3(0.3);\\n\\n  vec3 incomingRay = normalize(position - eye);\\n  vec3 normal = normalize(actualPosition - sphereCenter);\\n\\n  vec3 reflectedRay = reflect(incomingRay, normal);\\n  vec3 reflectedColor = getSurfaceRayColor(position + 1e-4 * normal, reflectedRay, underwaterColor, t + 1);\\n\\n  vec3 refractedColor = vec3(0.0, 0.0, 0.0);\\n  vec3 refractedRay = refract(incomingRay, normal, IOR_WATER / IOR_AIR);\\n  float tt = intersectSphere(position, refractedRay, sphereCenter, sphereRadius);\\n  if (tt < 1e+6) {\\n    vec3 nextHit = position + tt * refractedRay;\\n    vec3 nextNormal = normalize(sphereCenter - nextHit);\\n    vec3 nextRefractedRay = refract(refractedRay, nextNormal, IOR_AIR / IOR_WATER);\\n    refractedColor = dot(-nextNormal, nextRefractedRay) * getSurfaceRayColor(nextHit - 1e-4 * nextNormal, nextRefractedRay, underwaterColor, t + 1);\\n  }\\n\\n  float fresnel = mix(0.5, 1.0, pow(1.0 - dot(normal, -incomingRay), 3.0));\\n\\n  color += fresnel * dot(normal, reflectedColor) * reflectedColor;\\n  color += (1.0 - fresnel) * dot(-normal, refractedRay) * refractedColor;\\n\\n  return color;\\n}\\n\\nvec3 getWallColor(vec3 point) {\\n  float scale = 0.5;\\n  \\n  vec3 wallColor;\\n  vec3 normal;\\n  if (abs(point.x) > 0.999) {\\n    wallColor = texture2D(tiles, point.yz * 0.5 + vec2(1.0, 0.5)).rgb;\\n    normal = vec3(-point.x, 0.0, 0.0);\\n  } else if (abs(point.z) > 0.999) {\\n    wallColor = texture2D(tiles, point.yx * 0.5 + vec2(1.0, 0.5)).rgb;\\n    normal = vec3(0.0, 0.0, -point.z);\\n  } else {\\n    wallColor = texture2D(tiles, point.xz * 0.5 + 0.5).rgb;\\n    normal = vec3(0.0, 1.0, 0.0);\\n  }\\n  \\n  scale /= length(point); /* pool ambient occlusion */\\n  scale *= 1.0 - 0.9 / pow(length(point - sphereCenter) / sphereRadius, 4.0); /* sphere ambient occlusion */\\n  \\n  /* caustics */\\n  vec3 refractedLight = -refract(-light, vec3(0.0, 1.0, 0.0), IOR_AIR / IOR_WATER);\\n  float diffuse = max(0.0, dot(refractedLight, normal));\\n  vec4 info = texture2D(water, point.xz * 0.5 + 0.5);\\n  if (point.y < info.r) {\\n    vec4 caustic = texture2D(causticTex, 0.75 * (point.xz - point.y * refractedLight.xz / refractedLight.y) * 0.5 + 0.5);\\n    scale += diffuse * caustic.r * 2.0 * caustic.g;\\n  } else {\\n    /* shadow for the rim of the pool */\\n    vec2 t = intersectCube(point, refractedLight, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n    diffuse *= 1.0 / (1.0 + exp(-200.0 / (1.0 + 10.0 * (t.y - t.x)) * (point.y + refractedLight.y * t.y - 2.0 / 12.0)));\\n    \\n    scale += diffuse * 0.5;\\n  }\\n  \\n  return wallColor * scale;\\n}\\n\\n\\nvec3 getSurfaceRayColor(vec3 origin, vec3 ray, vec3 waterColor, int t) {\\n  vec3 color;\\n  float q = intersectSphere(origin, ray, sphereCenter, sphereRadius);\\n  if (ray.y < 0.0) {\\n    vec2 t = intersectCube(origin, ray, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n    color = getWallColor(origin + ray * t.y);\\n  } else {\\n    vec2 t = intersectCube(origin, ray, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n    vec3 hit = origin + ray * t.y;\\n    if (hit.y < 2.0 / 12.0) {\\n      color = getWallColor(hit);\\n    } else {\\n      color = textureCube(sky, ray).rgb;\\n      color += vec3(pow(max(0.0, dot(light, ray)), 5000.0)) * vec3(10.0, 8.0, 6.0);\\n    }\\n  }\\n  if (ray.y < 0.0) color *= waterColor;\\n  return color;\\n}\\n\\nvoid main() {\\n  vec4 info = texture2D(water, position.xz * 0.5 + 0.5);\\n  if (position.y < info.r) {\\n    gl_FragColor = vec4(getBubbleColor(actualPosition, 0), 1.0);\\n    gl_FragColor.rgb *= underwaterColor * 1.2;\\n  } else {\\n    vec3 normal = vec3(info.b, sqrt(1.0 - dot(info.ba, info.ba)), info.a);\\n    vec3 incomingRay = normalize(position - eye);\\n    vec3 reflectedRay = reflect(incomingRay, normal);\\n    vec3 refractedRay = refract(incomingRay, normal, IOR_AIR / IOR_WATER);\\n    float fresnel = mix(0.25, 1.0, pow(1.0 - dot(normal, -incomingRay), 3.0));\\n    \\n    vec3 reflectedColor = getSurfaceRayColor(position, reflectedRay, abovewaterColor, 0);\\n    vec3 refractedColor = getSurfaceRayColor(position, refractedRay, abovewaterColor, 0);\\n    \\n    gl_FragColor = vec4(mix(refractedColor, reflectedColor, fresnel), 1.0);\\n  }\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nconst float IOR_AIR = 1.0;\\nconst float IOR_WATER = 1.333;\\nconst float poolHeight = 1.0;\\nuniform vec3 light;\\nuniform sampler2D water;\\n\\nvarying vec3 oldPos;\\nvarying vec3 newPos;\\nvarying vec3 ray;\\n\\nvec2 intersectCube(vec3 origin, vec3 ray, vec3 cubeMin, vec3 cubeMax) {\\n    vec3 tMin = (cubeMin - origin) / ray;\\n    vec3 tMax = (cubeMax - origin) / ray;\\n    vec3 t1 = min(tMin, tMax);\\n    vec3 t2 = max(tMin, tMax);\\n    float tNear = max(max(t1.x, t1.y), t1.z);\\n    float tFar = min(min(t2.x, t2.y), t2.z);\\n    return vec2(tNear, tFar);\\n  }\\n\\n/* project the ray onto the plane */\\nvec3 project(vec3 origin, vec3 ray, vec3 refractedLight) {\\n  vec2 tcube = intersectCube(origin, ray, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n  origin += ray * tcube.y;\\n  float tplane = (-origin.y - 1.0) / refractedLight.y;\\n  return origin + refractedLight * tplane;\\n}\\n\\nvoid main() {\\n  vec4 info = texture2D(water, gl_Vertex.xy * 0.5 + 0.5);\\n  info.ba *= 0.5;\\n  vec3 normal = vec3(info.b, sqrt(1.0 - dot(info.ba, info.ba)), info.a);\\n  \\n  /* project the vertices along the refracted vertex ray */\\n  vec3 refractedLight = refract(-light, vec3(0.0, 1.0, 0.0), IOR_AIR / IOR_WATER);\\n  ray = refract(-light, normal, IOR_AIR / IOR_WATER);\\n  oldPos = project(gl_Vertex.xzy, refractedLight, refractedLight);\\n  newPos = project(gl_Vertex.xzy + vec3(0.0, info.r, 0.0), ray, refractedLight);\\n  \\n  gl_Position = vec4(0.75 * (newPos.xz + refractedLight.xz / refractedLight.y), 0.0, 1.0);\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\n#extension GL_OES_standard_derivatives : enable\\n\\nconst float IOR_AIR = 1.0;\\nconst float IOR_WATER = 1.333;\\nconst float poolHeight = 1.0;\\nuniform bool hasDerivatives;\\nuniform vec3 light;\\nuniform vec3 sphereCenter;\\nuniform float sphereRadius;\\n\\nvarying vec3 oldPos;\\nvarying vec3 newPos;\\nvarying vec3 ray;\\n\\nvec2 intersectCube(vec3 origin, vec3 ray, vec3 cubeMin, vec3 cubeMax) {\\n  vec3 tMin = (cubeMin - origin) / ray;\\n  vec3 tMax = (cubeMax - origin) / ray;\\n  vec3 t1 = min(tMin, tMax);\\n  vec3 t2 = max(tMin, tMax);\\n  float tNear = max(max(t1.x, t1.y), t1.z);\\n  float tFar = min(min(t2.x, t2.y), t2.z);\\n  return vec2(tNear, tFar);\\n}\\n\\nvoid main() {\\n  if (hasDerivatives) {\\n    /* if the triangle gets smaller, it gets brighter, and vice versa */\\n    float oldArea = length(dFdx(oldPos)) * length(dFdy(oldPos));\\n    float newArea = length(dFdx(newPos)) * length(dFdy(newPos));\\n    gl_FragColor = vec4(oldArea / newArea * 0.2, 1.0, 0.0, 0.0);\\n  } else {\\n    gl_FragColor = vec4(0.2, 0.2, 0.0, 0.0);\\n  }\\n  vec3 refractedLight = refract(-light, vec3(0.0, 1.0, 0.0), IOR_AIR / IOR_WATER);\\n  \\n  /* compute a blob shadow and make sure we only draw a shadow if the player is blocking the light */\\n  vec3 dir = (sphereCenter - newPos) / sphereRadius;\\n  vec3 area = cross(dir, refractedLight);\\n  float shadow = dot(area, area);\\n  float dist = dot(dir, -refractedLight);\\n  shadow = 1.0 + (shadow - 1.0) / (0.05 + dist * 0.025);\\n  shadow = clamp(1.0 / (1.0 + exp(-shadow)), 0.0, 1.0);\\n  shadow = mix(1.0, shadow, clamp(dist * 2.0, 0.0, 1.0));\\n  gl_FragColor.g = shadow;\\n  \\n  /* shadow for the rim of the pool */\\n  vec2 t = intersectCube(newPos, -refractedLight, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n  gl_FragColor.r *= 1.0 / (1.0 + exp(-200.0 / (1.0 + 10.0 * (t.y - t.x)) * (newPos.y - refractedLight.y * t.y - 2.0 / 12.0)));\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nconst float poolHeight = 1.0;\\n\\nvarying vec3 position;\\n\\nvoid main() {\\n  position = gl_Vertex.xyz;\\n  position.y = ((1.0 - position.y) * (7.0 / 12.0) - 1.0) * poolHeight;\\n  gl_Position = gl_ModelViewProjectionMatrix * vec4(position, 1.0);\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nvarying vec3 position;\\n\\nconst float IOR_AIR = 1.0;\\nconst float IOR_WATER = 1.333;\\nconst vec3 underwaterColor = vec3(0.4, 0.9, 1.0);\\nconst float poolHeight = 1.0;\\n\\nuniform vec3 light;\\nuniform vec3 sphereCenter;\\nuniform float sphereRadius;\\nuniform sampler2D tiles;\\nuniform sampler2D causticTex;\\nuniform sampler2D water;\\n\\nvec2 intersectCube(vec3 origin, vec3 ray, vec3 cubeMin, vec3 cubeMax) {\\n  vec3 tMin = (cubeMin - origin) / ray;\\n  vec3 tMax = (cubeMax - origin) / ray;\\n  vec3 t1 = min(tMin, tMax);\\n  vec3 t2 = max(tMin, tMax);\\n  float tNear = max(max(t1.x, t1.y), t1.z);\\n  float tFar = min(min(t2.x, t2.y), t2.z);\\n  return vec2(tNear, tFar);\\n}\\n\\nvec3 getWallColor(vec3 point) {\\n  float scale = 0.5;\\n  \\n  vec3 wallColor;\\n  vec3 normal;\\n  if (abs(point.x) > 0.999) {\\n    wallColor = texture2D(tiles, point.yz * 0.5 + vec2(1.0, 0.5)).rgb;\\n    normal = vec3(-point.x, 0.0, 0.0);\\n  } else if (abs(point.z) > 0.999) {\\n    wallColor = texture2D(tiles, point.yx * 0.5 + vec2(1.0, 0.5)).rgb;\\n    normal = vec3(0.0, 0.0, -point.z);\\n  } else {\\n    wallColor = texture2D(tiles, point.xz * 0.5 + 0.5).rgb;\\n    normal = vec3(0.0, 1.0, 0.0);\\n  }\\n  \\n  scale /= length(point); /* pool ambient occlusion */\\n  scale *= 1.0 - 0.9 / pow(length(point - sphereCenter) / sphereRadius, 4.0); /* sphere ambient occlusion */\\n  \\n  /* caustics */\\n  vec3 refractedLight = -refract(-light, vec3(0.0, 1.0, 0.0), IOR_AIR / IOR_WATER);\\n  float diffuse = max(0.0, dot(refractedLight, normal));\\n  vec4 info = texture2D(water, point.xz * 0.5 + 0.5);\\n  if (point.y < info.r) {\\n    vec4 caustic = texture2D(causticTex, 0.75 * (point.xz - point.y * refractedLight.xz / refractedLight.y) * 0.5 + 0.5);\\n    scale += diffuse * caustic.r * 2.0 * caustic.g;\\n  } else {\\n    /* shadow for the rim of the pool */\\n    vec2 t = intersectCube(point, refractedLight, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n    diffuse *= 1.0 / (1.0 + exp(-200.0 / (1.0 + 10.0 * (t.y - t.x)) * (point.y + refractedLight.y * t.y - 2.0 / 12.0)));\\n    \\n    scale += diffuse * 0.5;\\n  }\\n  \\n  return wallColor * scale;\\n}\\n\\nvoid main() {\\n  gl_FragColor = vec4(getWallColor(position), 1.0);\\n  vec4 info = texture2D(water, position.xz * 0.5 + 0.5);\\n  if (position.y < info.y) {\\n    gl_FragColor.rgb *= underwaterColor * 1.2;\\n  }\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform vec3 sphereCenter;\\nuniform float sphereRadius;\\n\\nvarying vec3 position;\\n\\nvoid main() {\\n  position = sphereCenter + gl_Vertex.xyz * sphereRadius;\\n  gl_Position = gl_ModelViewProjectionMatrix * vec4(position, 1.0);\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nconst float IOR_AIR = 1.0;\\nconst float IOR_WATER = 1.333;\\nconst vec3 underwaterColor = vec3(0.4, 0.9, 1.0);\\nconst float poolHeight = 1.0;\\nuniform vec3 light;\\nuniform vec3 sphereCenter;\\nuniform float sphereRadius;\\nuniform sampler2D causticTex;\\nuniform sampler2D water;\\n\\nvarying vec3 position;\\n\\nvec3 getSphereColor(vec3 point) {\\n  vec3 color = vec3(0.5);\\n  \\n  /* ambient occlusion with walls */\\n  color *= 1.0 - 0.9 / pow((1.0 + sphereRadius - abs(point.x)) / sphereRadius, 3.0);\\n  color *= 1.0 - 0.9 / pow((1.0 + sphereRadius - abs(point.z)) / sphereRadius, 3.0);\\n  color *= 1.0 - 0.9 / pow((point.y + 1.0 + sphereRadius) / sphereRadius, 3.0);\\n  \\n  /* caustics */\\n  vec3 sphereNormal = (point - sphereCenter) / sphereRadius;\\n  vec3 refractedLight = refract(-light, vec3(0.0, 1.0, 0.0), IOR_AIR / IOR_WATER);\\n  float diffuse = max(0.0, dot(-refractedLight, sphereNormal)) * 0.5;\\n  vec4 info = texture2D(water, point.xz * 0.5 + 0.5);\\n  if (point.y < info.r) {\\n    vec4 caustic = texture2D(causticTex, 0.75 * (point.xz - point.y * refractedLight.xz / refractedLight.y) * 0.5 + 0.5);\\n    diffuse *= caustic.r * 4.0;\\n  }\\n  color += diffuse;\\n  \\n  return color;\\n}\\n\\nvoid main() {\\n  gl_FragColor = vec4(getSphereColor(position), 1.0);\\n  vec4 info = texture2D(water, position.xz * 0.5 + 0.5);\\n  if (position.y < info.r) {\\n    gl_FragColor.rgb *= underwaterColor * 1.2;\\n  }\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform sampler2D water;\\nvarying vec3 position;\\n\\nvoid main() {\\n  vec4 info = texture2D(water, gl_Vertex.xy * 0.5 + 0.5);\\n  position = gl_Vertex.xzy;\\n  position.y += info.r;\\n  gl_Position = gl_ModelViewProjectionMatrix * vec4(position, 1.0);\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nconst float IOR_AIR = 1.0;\\nconst float IOR_WATER = 1.333;\\nconst vec3 abovewaterColor = vec3(0.25, 1.0, 1.25);\\nconst vec3 underwaterColor = vec3(0.4, 0.9, 1.0);\\nconst float poolHeight = 1.0;\\nuniform vec3 light;\\nuniform vec3 sphereCenter;\\nuniform float sphereRadius;\\nuniform sampler2D tiles;\\nuniform sampler2D causticTex;\\nuniform sampler2D water;\\n\\nvec2 intersectCube(vec3 origin, vec3 ray, vec3 cubeMin, vec3 cubeMax) {\\n  vec3 tMin = (cubeMin - origin) / ray;\\n  vec3 tMax = (cubeMax - origin) / ray;\\n  vec3 t1 = min(tMin, tMax);\\n  vec3 t2 = max(tMin, tMax);\\n  float tNear = max(max(t1.x, t1.y), t1.z);\\n  float tFar = min(min(t2.x, t2.y), t2.z);\\n  return vec2(tNear, tFar);\\n}\\n\\nfloat intersectSphere(vec3 origin, vec3 ray, vec3 sphereCenter, float sphereRadius) {\\n  vec3 toSphere = origin - sphereCenter;\\n  float a = dot(ray, ray);\\n  float b = 2.0 * dot(toSphere, ray);\\n  float c = dot(toSphere, toSphere) - sphereRadius * sphereRadius;\\n  float discriminant = b*b - 4.0*a*c;\\n  if (discriminant > 0.0) {\\n    float t1 = (-b - sqrt(discriminant)) / (2.0 * a);\\n    float t2 = (-b + sqrt(discriminant)) / (2.0 * a);\\n    if (t1 > 0.0) return t1;\\n    else if (t2 > 0.0) return t2;\\n  }\\n  return 1.0e6;\\n}\\n\\nvec3 getSphereColor(vec3 point) {\\n  vec3 color = vec3(0.5);\\n  \\n  /* ambient occlusion with walls */\\n  color *= 1.0 - 0.9 / pow((1.0 + sphereRadius - abs(point.x)) / sphereRadius, 3.0);\\n  color *= 1.0 - 0.9 / pow((1.0 + sphereRadius - abs(point.z)) / sphereRadius, 3.0);\\n  color *= 1.0 - 0.9 / pow((point.y + 1.0 + sphereRadius) / sphereRadius, 3.0);\\n  \\n  /* caustics */\\n  vec3 sphereNormal = (point - sphereCenter) / sphereRadius;\\n  vec3 refractedLight = refract(-light, vec3(0.0, 1.0, 0.0), IOR_AIR / IOR_WATER);\\n  float diffuse = max(0.0, dot(-refractedLight, sphereNormal)) * 0.5;\\n  vec4 info = texture2D(water, point.xz * 0.5 + 0.5);\\n  if (point.y < info.r) {\\n    vec4 caustic = texture2D(causticTex, 0.75 * (point.xz - point.y * refractedLight.xz / refractedLight.y) * 0.5 + 0.5);\\n    diffuse *= caustic.r * 4.0;\\n  }\\n  color += diffuse;\\n  \\n  return color;\\n}\\n\\nvec3 getWallColor(vec3 point) {\\n  float scale = 0.5;\\n  \\n  vec3 wallColor;\\n  vec3 normal;\\n  if (abs(point.x) > 0.999) {\\n    wallColor = texture2D(tiles, point.yz * 0.5 + vec2(1.0, 0.5)).rgb;\\n    normal = vec3(-point.x, 0.0, 0.0);\\n  } else if (abs(point.z) > 0.999) {\\n    wallColor = texture2D(tiles, point.yx * 0.5 + vec2(1.0, 0.5)).rgb;\\n    normal = vec3(0.0, 0.0, -point.z);\\n  } else {\\n    wallColor = texture2D(tiles, point.xz * 0.5 + 0.5).rgb;\\n    normal = vec3(0.0, 1.0, 0.0);\\n  }\\n  \\n  scale /= length(point); /* pool ambient occlusion */\\n  scale *= 1.0 - 0.9 / pow(length(point - sphereCenter) / sphereRadius, 4.0); /* sphere ambient occlusion */\\n  \\n  /* caustics */\\n  vec3 refractedLight = -refract(-light, vec3(0.0, 1.0, 0.0), IOR_AIR / IOR_WATER);\\n  float diffuse = max(0.0, dot(refractedLight, normal));\\n  vec4 info = texture2D(water, point.xz * 0.5 + 0.5);\\n  if (point.y < info.r) {\\n    vec4 caustic = texture2D(causticTex, 0.75 * (point.xz - point.y * refractedLight.xz / refractedLight.y) * 0.5 + 0.5);\\n    scale += diffuse * caustic.r * 2.0 * caustic.g;\\n  } else {\\n    /* shadow for the rim of the pool */\\n    vec2 t = intersectCube(point, refractedLight, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n    diffuse *= 1.0 / (1.0 + exp(-200.0 / (1.0 + 10.0 * (t.y - t.x)) * (point.y + refractedLight.y * t.y - 2.0 / 12.0)));\\n    \\n    scale += diffuse * 0.5;\\n  }\\n  \\n  return wallColor * scale;\\n}\\n\\nuniform vec3 eye;\\nvarying vec3 position;\\nuniform samplerCube sky;\\nuniform int isUnderWater;\\n\\nvec3 getSurfaceRayColor(vec3 origin, vec3 ray, vec3 waterColor) {\\n  vec3 color;\\n  float q = intersectSphere(origin, ray, sphereCenter, sphereRadius);\\n  if (q < 1.0e6) {\\n    color = getSphereColor(origin + ray * q);\\n  } else if (ray.y < 0.0) {\\n    vec2 t = intersectCube(origin, ray, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n    color = getWallColor(origin + ray * t.y);\\n  } else {\\n    vec2 t = intersectCube(origin, ray, vec3(-1.0, -poolHeight, -1.0), vec3(1.0, 2.0, 1.0));\\n    vec3 hit = origin + ray * t.y;\\n    if (hit.y < 2.0 / 12.0) {\\n      color = getWallColor(hit);\\n    } else {\\n      color = textureCube(sky, ray).rgb;\\n      color += vec3(pow(max(0.0, dot(light, ray)), 5000.0)) * vec3(10.0, 8.0, 6.0);\\n    }\\n  }\\n  if (ray.y < 0.0) color *= waterColor;\\n  return color;\\n}\\n\\nvoid main() {\\n  vec2 coord = position.xz * 0.5 + 0.5;\\n  vec4 info = texture2D(water, coord);\\n  \\n  /* make water look more \\\"peaked\\\" */\\n  for (int i = 0; i < 5; i++) {\\n    coord += info.ba * 0.005;\\n    info = texture2D(water, coord);\\n  }\\n  \\n  vec3 normal = vec3(info.b, sqrt(1.0 - dot(info.ba, info.ba)), info.a);\\n  vec3 incomingRay = normalize(position - eye);\\n  \\n  if (isUnderWater > 0) {\\n    normal = -normal;\\n    vec3 reflectedRay = reflect(incomingRay, normal);\\n    vec3 refractedRay = refract(incomingRay, normal, IOR_WATER / IOR_AIR);\\n    float fresnel = mix(0.5, 1.0, pow(1.0 - dot(normal, -incomingRay), 3.0));\\n    \\n    vec3 reflectedColor = getSurfaceRayColor(position, reflectedRay, underwaterColor);\\n    vec3 refractedColor = getSurfaceRayColor(position, refractedRay, vec3(1.0)) * vec3(0.8, 1.0, 1.1);\\n    \\n    gl_FragColor = vec4(mix(reflectedColor, refractedColor, (1.0 - fresnel) * length(refractedRay)), 1.0);\\n  } else {\\n    vec3 reflectedRay = reflect(incomingRay, normal);\\n    vec3 refractedRay = refract(incomingRay, normal, IOR_AIR / IOR_WATER);\\n    float fresnel = mix(0.25, 1.0, pow(1.0 - dot(normal, -incomingRay), 3.0));\\n    \\n    vec3 reflectedColor = getSurfaceRayColor(position, reflectedRay, abovewaterColor);\\n    vec3 refractedColor = getSurfaceRayColor(position, refractedRay, abovewaterColor);\\n    \\n    gl_FragColor = vec4(mix(refractedColor, reflectedColor, fresnel), 1.0);\\n  }\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nconst float PI = 3.141592653589793;\\nuniform sampler2D texture;\\nuniform vec2 center;\\nuniform float radius;\\nuniform float strength;\\nvarying vec2 coord;\\n\\nvoid main() {\\n  vec4 info = texture2D(texture, coord);\\n\\n  float drop = max(0.0, 1.0 - length(center * 0.5 + 0.5 - coord) / radius);\\n  drop = 0.5 - cos(drop * PI) * 0.5;\\n  info.r += drop * strength;\\n\\n  gl_FragColor = info;\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform sampler2D texture;\\nuniform vec2 delta;\\nvarying vec2 coord;\\n\\nvoid main() {\\n  vec4 info = texture2D(texture, coord);\\n\\n  // update the normal\\n  vec3 dx = vec3(delta.x, texture2D(texture, vec2(coord.x + 0.5 * delta.x, coord.y)).r - info.r, 0.0);\\n  vec3 dy = vec3(0.0, texture2D(texture, vec2(coord.x, coord.y + 0.5 * delta.y)).r - info.r, 0.5 * delta.y);\\n  info.ba = normalize(cross(dy, dx)).xz;\\n\\n  gl_FragColor = info;\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform sampler2D texture;\\nuniform vec3 oldCenter;\\nuniform vec3 newCenter;\\nuniform float radius;\\nvarying vec2 coord;\\nvarying vec3 position;\\n\\nfloat volumeInSphere(vec3 center) {\\n  vec3 toCenter = vec3(coord.x * 2.0 - 1.0, 0.0, coord.y * 2.0 - 1.0) - center;\\n  float t = length(toCenter) / radius;\\n  float dy = exp(-pow(t * 1.5, 6.0));\\n  float ymin = min(0.0, center.y - dy);\\n  float ymax = min(max(0.0, center.y + dy), ymin + 2.0 * dy);\\n  return (ymax - ymin) * 0.1;\\n}\\n\\nvoid main() {\\n  /* get vertex info */\\n  vec4 info = texture2D(texture, coord);\\n\\n  /* add the old volume */\\n  info.r += volumeInSphere(oldCenter);\\n  \\n  /* subtract the new volume */\\n  float volume = volumeInSphere(newCenter);\\n\\n  if (volume > 0.0) {\\n    float height = info.r;\\n    if (position.y <= height) {\\n      info.r -= volume;\\n    } else {\\n      info.r += 0.01 * radius;\\n    }\\n  }\\n\\n  gl_FragColor = info;\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform sampler2D texture;\\nuniform vec3 oldCenter;\\nuniform vec3 newCenter;\\nuniform float radius;\\nvarying vec2 coord;\\n\\nfloat volumeInSphere(vec3 center) {\\n  vec3 toCenter = vec3(coord.x * 2.0 - 1.0, 0.0, coord.y * 2.0 - 1.0) - center;\\n  float t = length(toCenter) / radius;\\n  float dy = exp(-pow(t * 1.5, 6.0));\\n  float ymin = min(0.0, center.y - dy);\\n  float ymax = min(max(0.0, center.y + dy), ymin + 2.0 * dy);\\n  return (ymax - ymin) * 0.1;\\n}\\n\\nvoid main() {\\n  /* get vertex info */\\n  vec4 info = texture2D(texture, coord);\\n\\n  /* add the old volume */\\n  info.r += volumeInSphere(oldCenter);\\n  \\n  /* subtract the new volume */\\n  info.r -= volumeInSphere(newCenter);\\n\\n  gl_FragColor = info;\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform sampler2D texture;\\nuniform vec3 oldCenter;\\nuniform vec3 newCenter;\\nuniform float radius;\\nvarying vec2 coord;\\nvarying vec3 position;\\n\\nfloat volumeInSphere(vec3 center) {\\n  vec3 toCenter = vec3(coord.x * 2.0 - 1.0, 0.0, coord.y * 2.0 - 1.0) - center;\\n  float t = length(toCenter) / radius;\\n  float dy = exp(-pow(t * 1.5, 6.0));\\n  float ymin = min(0.0, center.y - dy);\\n  float ymax = min(max(0.0, center.y + dy), ymin + 2.0 * dy);\\n  return (ymax - ymin) * 0.1;\\n}\\n\\n// Fluid reconstraction kernel function.\\nfloat W(float h, float d) {\\n  if (d > h)\\n    return 0.8 * h;\\n  else {\\n    return (315.0 * pow(h-d, 3.0)) / (64.0 * 3.1415926 * pow(h, 4.0));\\n  }\\n}\\n\\nvoid main() {\\n  /* get vertex info */\\n  vec4 info = texture2D(texture, coord);\\n\\n  float oldVolume = volumeInSphere(oldCenter);\\n  info.r += oldVolume;\\n\\n  float newVolume = volumeInSphere(newCenter);\\n  if (newVolume > 0.0) { \\n    // Fluid surface reconstruction\\n    float h = 2.0 * radius * (2.0 + info.r - newCenter.y);\\n    float dis = pow(length(newCenter - position), 2.0);\\n    info.r += 0.005 * (W(h, dis) - W(h/2.0, dis));\\n   }\\n\\n  gl_FragColor = info;\\n}\\n\";","module.exports = \"// Copyright 2019 Yuchen Wang\\n\\nuniform sampler2D texture;\\nuniform vec2 delta;\\nvarying vec2 coord;\\n\\nvoid main() {\\n  vec4 info = texture2D(texture, coord);\\n\\n  // Calculate neibour height\\n  vec2 dx = vec2(0.5 * delta.x, 0.0);\\n  vec2 dy = vec2(0.0, 0.5 * delta.y);\\n  float average = (\\n      texture2D(texture, coord - 0.5 * dx).r +\\n      texture2D(texture, coord - 0.5 * dy).r +\\n      texture2D(texture, coord + 0.5 * dx).r + \\n      texture2D(texture, coord + 0.5 * dy).r) * 0.25;\\n\\n  info.g += (average - info.r) * 2.0;\\n  info.g *= 0.995;\\n  info.r += info.g;\\n  gl_FragColor = info;\\n}\\n\";","/*\n * lightgl.js\n * http://github.com/evanw/lightgl.js/\n *\n * Copyright 2011 Evan Wallace\n * Released under the MIT license\n */\nvar GL = (function() {\n\n// src/main.js\n// The internal `gl` variable holds the current WebGL context.\nvar gl;\n\nvar GL = {\n  // ### Initialization\n  //\n  // `GL.create()` creates a new WebGL context and augments it with more\n  // methods. The alpha channel is disabled by default because it usually causes\n  // unintended transparencies in the canvas.\n  create: function(options) {\n    options = options || {};\n    var canvas = document.createElement('canvas');\n    canvas.width = 800;\n    canvas.height = 600;\n    if (!('alpha' in options)) options.alpha = false;\n    try { gl = canvas.getContext('webgl', options); } catch (e) {}\n    try { gl = gl || canvas.getContext('experimental-webgl', options); } catch (e) {}\n    if (!gl) throw new Error('WebGL not supported');\n    gl.HALF_FLOAT_OES = 0x8D61;\n    addMatrixStack();\n    addImmediateMode();\n    addEventListeners();\n    addOtherMethods();\n    return gl;\n  },\n\n  // `GL.keys` contains a mapping of key codes to booleans indicating whether\n  // that key is currently pressed.\n  keys: {},\n\n  // Export all external classes.\n  Matrix: Matrix,\n  Indexer: Indexer,\n  Buffer: Buffer,\n  Mesh: Mesh,\n  HitTest: HitTest,\n  Raytracer: Raytracer,\n  Shader: Shader,\n  Texture: Texture,\n  Vector: Vector\n};\n\n// ### Matrix stack\n//\n// Implement the OpenGL modelview and projection matrix stacks, along with some\n// other useful GLU matrix functions.\n\nfunction addMatrixStack() {\n  gl.MODELVIEW = ENUM | 1;\n  gl.PROJECTION = ENUM | 2;\n  var tempMatrix = new Matrix();\n  var resultMatrix = new Matrix();\n  gl.modelviewMatrix = new Matrix();\n  gl.projectionMatrix = new Matrix();\n  var modelviewStack = [];\n  var projectionStack = [];\n  var matrix, stack;\n  gl.matrixMode = function(mode) {\n    switch (mode) {\n      case gl.MODELVIEW:\n        matrix = 'modelviewMatrix';\n        stack = modelviewStack;\n        break;\n      case gl.PROJECTION:\n        matrix = 'projectionMatrix';\n        stack = projectionStack;\n        break;\n      default:\n        throw new Error('invalid matrix mode ' + mode);\n    }\n  };\n  gl.loadIdentity = function() {\n    Matrix.identity(gl[matrix]);\n  };\n  gl.loadMatrix = function(m) {\n    var from = m.m, to = gl[matrix].m;\n    for (var i = 0; i < 16; i++) {\n      to[i] = from[i];\n    }\n  };\n  gl.multMatrix = function(m) {\n    gl.loadMatrix(Matrix.multiply(gl[matrix], m, resultMatrix));\n  };\n  gl.perspective = function(fov, aspect, near, far) {\n    gl.multMatrix(Matrix.perspective(fov, aspect, near, far, tempMatrix));\n  };\n  gl.frustum = function(l, r, b, t, n, f) {\n    gl.multMatrix(Matrix.frustum(l, r, b, t, n, f, tempMatrix));\n  };\n  gl.ortho = function(l, r, b, t, n, f) {\n    gl.multMatrix(Matrix.ortho(l, r, b, t, n, f, tempMatrix));\n  };\n  gl.scale = function(x, y, z) {\n    gl.multMatrix(Matrix.scale(x, y, z, tempMatrix));\n  };\n  gl.translate = function(x, y, z) {\n    gl.multMatrix(Matrix.translate(x, y, z, tempMatrix));\n  };\n  gl.rotate = function(a, x, y, z) {\n    gl.multMatrix(Matrix.rotate(a, x, y, z, tempMatrix));\n  };\n  gl.lookAt = function(ex, ey, ez, cx, cy, cz, ux, uy, uz) {\n    gl.multMatrix(Matrix.lookAt(ex, ey, ez, cx, cy, cz, ux, uy, uz, tempMatrix));\n  };\n  gl.pushMatrix = function() {\n    stack.push(Array.prototype.slice.call(gl[matrix].m));\n  };\n  gl.popMatrix = function() {\n    var m = stack.pop();\n    gl[matrix].m = hasFloat32Array ? new Float32Array(m) : m;\n  };\n  gl.project = function(objX, objY, objZ, modelview, projection, viewport) {\n    modelview = modelview || gl.modelviewMatrix;\n    projection = projection || gl.projectionMatrix;\n    viewport = viewport || gl.getParameter(gl.VIEWPORT);\n    var point = projection.transformPoint(modelview.transformPoint(new Vector(objX, objY, objZ)));\n    return new Vector(\n      viewport[0] + viewport[2] * (point.x * 0.5 + 0.5),\n      viewport[1] + viewport[3] * (point.y * 0.5 + 0.5),\n      point.z * 0.5 + 0.5\n    );\n  };\n  gl.unProject = function(winX, winY, winZ, modelview, projection, viewport) {\n    modelview = modelview || gl.modelviewMatrix;\n    projection = projection || gl.projectionMatrix;\n    viewport = viewport || gl.getParameter(gl.VIEWPORT);\n    var point = new Vector(\n      (winX - viewport[0]) / viewport[2] * 2 - 1,\n      (winY - viewport[1]) / viewport[3] * 2 - 1,\n      winZ * 2 - 1\n    );\n    return Matrix.inverse(Matrix.multiply(projection, modelview, tempMatrix), resultMatrix).transformPoint(point);\n  };\n  gl.matrixMode(gl.MODELVIEW);\n}\n\n// ### Immediate mode\n//\n// Provide an implementation of OpenGL's deprecated immediate mode. This is\n// depricated for a reason: constantly re-specifying the geometry is a bad\n// idea for performance. You should use a `GL.Mesh` instead, which specifies\n// the geometry once and caches it on the graphics card. Still, nothing\n// beats a quick `gl.begin(gl.POINTS); gl.vertex(1, 2, 3); gl.end();` for\n// debugging. This intentionally doesn't implement fixed-function lighting\n// because it's only meant for quick debugging tasks.\n\nfunction addImmediateMode() {\n  var immediateMode = {\n    mesh: new Mesh({ coords: true, colors: true, triangles: false }),\n    mode: -1,\n    coord: [0, 0, 0, 0],\n    color: [1, 1, 1, 1],\n    pointSize: 1,\n    shader: new Shader('\\\n      uniform float pointSize;\\\n      varying vec4 color;\\\n      varying vec4 coord;\\\n      void main() {\\\n        color = gl_Color;\\\n        coord = gl_TexCoord;\\\n        gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\\\n        gl_PointSize = pointSize;\\\n      }\\\n    ', '\\\n      uniform sampler2D texture;\\\n      uniform float pointSize;\\\n      uniform bool useTexture;\\\n      varying vec4 color;\\\n      varying vec4 coord;\\\n      void main() {\\\n        gl_FragColor = color;\\\n        if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\\\n      }\\\n    ')\n  };\n  gl.pointSize = function(pointSize) {\n    immediateMode.shader.uniforms({ pointSize: pointSize });\n  };\n  gl.begin = function(mode) {\n    if (immediateMode.mode != -1) throw new Error('mismatched gl.begin() and gl.end() calls');\n    immediateMode.mode = mode;\n    immediateMode.mesh.colors = [];\n    immediateMode.mesh.coords = [];\n    immediateMode.mesh.vertices = [];\n  };\n  gl.color = function(r, g, b, a) {\n    immediateMode.color = (arguments.length == 1) ? r.toArray().concat(1) : [r, g, b, a || 1];\n  };\n  gl.texCoord = function(s, t) {\n    immediateMode.coord = (arguments.length == 1) ? s.toArray(2) : [s, t];\n  };\n  gl.vertex = function(x, y, z) {\n    immediateMode.mesh.colors.push(immediateMode.color);\n    immediateMode.mesh.coords.push(immediateMode.coord);\n    immediateMode.mesh.vertices.push(arguments.length == 1 ? x.toArray() : [x, y, z]);\n  };\n  gl.end = function() {\n    if (immediateMode.mode == -1) throw new Error('mismatched gl.begin() and gl.end() calls');\n    immediateMode.mesh.compile();\n    immediateMode.shader.uniforms({\n      useTexture: !!gl.getParameter(gl.TEXTURE_BINDING_2D)\n    }).draw(immediateMode.mesh, immediateMode.mode);\n    immediateMode.mode = -1;\n  };\n}\n\n// ### Improved mouse events\n//\n// This adds event listeners on the `gl.canvas` element that call\n// `gl.onmousedown()`, `gl.onmousemove()`, and `gl.onmouseup()` with an\n// augmented event object. The event object also has the properties `x`, `y`,\n// `deltaX`, `deltaY`, and `dragging`.\nfunction addEventListeners() {\n  var context = gl, oldX = 0, oldY = 0, buttons = {}, hasOld = false;\n  var has = Object.prototype.hasOwnProperty;\n  function isDragging() {\n    for (var b in buttons) {\n      if (has.call(buttons, b) && buttons[b]) return true;\n    }\n    return false;\n  }\n  function augment(original) {\n    // Make a copy of original, a native `MouseEvent`, so we can overwrite\n    // WebKit's non-standard read-only `x` and `y` properties (which are just\n    // duplicates of `pageX` and `pageY`). We can't just use\n    // `Object.create(original)` because some `MouseEvent` functions must be\n    // called in the context of the original event object.\n    var e = {};\n    for (var name in original) {\n      if (typeof original[name] == 'function') {\n        e[name] = (function(callback) {\n          return function() {\n            callback.apply(original, arguments);\n          };\n        })(original[name]);\n      } else {\n        e[name] = original[name];\n      }\n    }\n    e.original = original;\n    e.x = e.pageX;\n    e.y = e.pageY;\n    for (var obj = gl.canvas; obj; obj = obj.offsetParent) {\n      e.x -= obj.offsetLeft;\n      e.y -= obj.offsetTop;\n    }\n    if (hasOld) {\n      e.deltaX = e.x - oldX;\n      e.deltaY = e.y - oldY;\n    } else {\n      e.deltaX = 0;\n      e.deltaY = 0;\n      hasOld = true;\n    }\n    oldX = e.x;\n    oldY = e.y;\n    e.dragging = isDragging();\n    e.preventDefault = function() {\n      e.original.preventDefault();\n    };\n    e.stopPropagation = function() {\n      e.original.stopPropagation();\n    };\n    return e;\n  }\n  function mousedown(e) {\n    gl = context;\n    if (!isDragging()) {\n      // Expand the event handlers to the document to handle dragging off canvas.\n      on(document, 'mousemove', mousemove);\n      on(document, 'mouseup', mouseup);\n      off(gl.canvas, 'mousemove', mousemove);\n      off(gl.canvas, 'mouseup', mouseup);\n    }\n    buttons[e.which] = true;\n    e = augment(e);\n    if (gl.onmousedown) gl.onmousedown(e);\n    e.preventDefault();\n  }\n  function mousemove(e) {\n    gl = context;\n    e = augment(e);\n    if (gl.onmousemove) gl.onmousemove(e);\n    e.preventDefault();\n  }\n  function mouseup(e) {\n    gl = context;\n    buttons[e.which] = false;\n    if (!isDragging()) {\n      // Shrink the event handlers back to the canvas when dragging ends.\n      off(document, 'mousemove', mousemove);\n      off(document, 'mouseup', mouseup);\n      on(gl.canvas, 'mousemove', mousemove);\n      on(gl.canvas, 'mouseup', mouseup);\n    }\n    e = augment(e);\n    if (gl.onmouseup) gl.onmouseup(e);\n    e.preventDefault();\n  }\n  function reset() {\n    hasOld = false;\n  }\n  function resetAll() {\n    buttons = {};\n    hasOld = false;\n  }\n  on(gl.canvas, 'mousedown', mousedown);\n  on(gl.canvas, 'mousemove', mousemove);\n  on(gl.canvas, 'mouseup', mouseup);\n  on(gl.canvas, 'mouseover', reset);\n  on(gl.canvas, 'mouseout', reset);\n  on(document, 'contextmenu', resetAll);\n}\n\n// ### Automatic keyboard state\n//\n// The current keyboard state is stored in `GL.keys`, a map of integer key\n// codes to booleans indicating whether that key is currently pressed. Certain\n// keys also have named identifiers that can be used directly, such as\n// `GL.keys.SPACE`. Values in `GL.keys` are initially undefined until that\n// key is pressed for the first time. If you need a boolean value, you can\n// cast the value to boolean by applying the not operator twice (as in\n// `!!GL.keys.SPACE`).\n\nfunction mapKeyCode(code) {\n  var named = {\n    8: 'BACKSPACE',\n    9: 'TAB',\n    13: 'ENTER',\n    16: 'SHIFT',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'LEFT',\n    38: 'UP',\n    39: 'RIGHT',\n    40: 'DOWN'\n  };\n  return named[code] || (code >= 65 && code <= 90 ? String.fromCharCode(code) : null);\n}\n\nfunction on(element, name, callback) {\n  element.addEventListener(name, callback);\n}\n\nfunction off(element, name, callback) {\n  element.removeEventListener(name, callback);\n}\n\non(document, 'keydown', function(e) {\n  if (!e.altKey && !e.ctrlKey && !e.metaKey) {\n    var key = mapKeyCode(e.keyCode);\n    if (key) GL.keys[key] = true;\n    GL.keys[e.keyCode] = true;\n  }\n});\n\non(document, 'keyup', function(e) {\n  if (!e.altKey && !e.ctrlKey && !e.metaKey) {\n    var key = mapKeyCode(e.keyCode);\n    if (key) GL.keys[key] = false;\n    GL.keys[e.keyCode] = false;\n  }\n});\n\nfunction addOtherMethods() {\n  // ### Multiple contexts\n  //\n  // When using multiple contexts in one web page, `gl.makeCurrent()` must be\n  // called before issuing commands to a different context.\n  (function(context) {\n    gl.makeCurrent = function() {\n      gl = context;\n    };\n  })(gl);\n\n  // ### Animation\n  //\n  // Call `gl.animate()` to provide an animation loop that repeatedly calls\n  // `gl.onupdate()` and `gl.ondraw()`.\n  gl.animate = function() {\n    var post =\n      window.requestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      function(callback) { setTimeout(callback, 1000 / 60); };\n    var time = new Date().getTime();\n    var context = gl;\n    function update() {\n      gl = context;\n      var now = new Date().getTime();\n      if (gl.onupdate) gl.onupdate((now - time) / 1000);\n      if (gl.ondraw) gl.ondraw();\n      post(update);\n      time = now;\n    }\n    update();\n  };\n\n  // ### Fullscreen\n  //\n  // Provide an easy way to get a fullscreen app running, including an\n  // automatic 3D perspective projection matrix by default. This should be\n  // called once.\n  //\n  // Just fullscreen, no automatic camera:\n  //\n  //     gl.fullscreen({ camera: false });\n  //\n  // Adjusting field of view, near plane distance, and far plane distance:\n  //\n  //     gl.fullscreen({ fov: 45, near: 0.1, far: 1000 });\n  //\n  // Adding padding from the edge of the window:\n  //\n  //     gl.fullscreen({ paddingLeft: 250, paddingBottom: 60 });\n  //\n  gl.fullscreen = function(options) {\n    options = options || {};\n    var top = options.paddingTop || 0;\n    var left = options.paddingLeft || 0;\n    var right = options.paddingRight || 0;\n    var bottom = options.paddingBottom || 0;\n    if (!document.body) {\n      throw new Error('document.body doesn\\'t exist yet (call gl.fullscreen() from ' +\n        'window.onload() or from inside the <body> tag)');\n    }\n    document.body.appendChild(gl.canvas);\n    document.body.style.overflow = 'hidden';\n    gl.canvas.style.position = 'absolute';\n    gl.canvas.style.left = left + 'px';\n    gl.canvas.style.top = top + 'px';\n    function resize() {\n      gl.canvas.width = window.innerWidth - left - right;\n      gl.canvas.height = window.innerHeight - top - bottom;\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n      if (options.camera || !('camera' in options)) {\n        gl.matrixMode(gl.PROJECTION);\n        gl.loadIdentity();\n        gl.perspective(options.fov || 45, gl.canvas.width / gl.canvas.height,\n          options.near || 0.1, options.far || 1000);\n        gl.matrixMode(gl.MODELVIEW);\n      }\n      if (gl.ondraw) gl.ondraw();\n    }\n    on(window, 'resize', resize);\n    resize();\n  };\n}\n\n// A value to bitwise-or with new enums to make them distinguishable from the\n// standard WebGL enums.\nvar ENUM = 0x12340000;\n\n// src/matrix.js\n// Represents a 4x4 matrix stored in row-major order that uses Float32Arrays\n// when available. Matrix operations can either be done using convenient\n// methods that return a new matrix for the result or optimized methods\n// that store the result in an existing matrix to avoid generating garbage.\n\nvar hasFloat32Array = (typeof Float32Array != 'undefined');\n\n// ### new GL.Matrix([elements])\n//\n// This constructor takes 16 arguments in row-major order, which can be passed\n// individually, as a list, or even as four lists, one for each row. If the\n// arguments are omitted then the identity matrix is constructed instead.\nfunction Matrix() {\n  var m = Array.prototype.concat.apply([], arguments);\n  if (!m.length) {\n    m = [\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1\n    ];\n  }\n  this.m = hasFloat32Array ? new Float32Array(m) : m;\n}\n\nMatrix.prototype = {\n  // ### .inverse()\n  //\n  // Returns the matrix that when multiplied with this matrix results in the\n  // identity matrix.\n  inverse: function() {\n    return Matrix.inverse(this, new Matrix());\n  },\n\n  // ### .transpose()\n  //\n  // Returns this matrix, exchanging columns for rows.\n  transpose: function() {\n    return Matrix.transpose(this, new Matrix());\n  },\n\n  // ### .multiply(matrix)\n  //\n  // Returns the concatenation of the transforms for this matrix and `matrix`.\n  // This emulates the OpenGL function `glMultMatrix()`.\n  multiply: function(matrix) {\n    return Matrix.multiply(this, matrix, new Matrix());\n  },\n\n  // ### .transformPoint(point)\n  //\n  // Transforms the vector as a point with a w coordinate of 1. This\n  // means translations will have an effect, for example.\n  transformPoint: function(v) {\n    var m = this.m;\n    return new Vector(\n      m[0] * v.x + m[1] * v.y + m[2] * v.z + m[3],\n      m[4] * v.x + m[5] * v.y + m[6] * v.z + m[7],\n      m[8] * v.x + m[9] * v.y + m[10] * v.z + m[11]\n    ).divide(m[12] * v.x + m[13] * v.y + m[14] * v.z + m[15]);\n  },\n\n  // ### .transformPoint(vector)\n  //\n  // Transforms the vector as a vector with a w coordinate of 0. This\n  // means translations will have no effect, for example.\n  transformVector: function(v) {\n    var m = this.m;\n    return new Vector(\n      m[0] * v.x + m[1] * v.y + m[2] * v.z,\n      m[4] * v.x + m[5] * v.y + m[6] * v.z,\n      m[8] * v.x + m[9] * v.y + m[10] * v.z\n    );\n  }\n};\n\n// ### GL.Matrix.inverse(matrix[, result])\n//\n// Returns the matrix that when multiplied with `matrix` results in the\n// identity matrix. You can optionally pass an existing matrix in `result`\n// to avoid allocating a new matrix. This implementation is from the Mesa\n// OpenGL function `__gluInvertMatrixd()` found in `project.c`.\nMatrix.inverse = function(matrix, result) {\n  result = result || new Matrix();\n  var m = matrix.m, r = result.m;\n\n  r[0] = m[5]*m[10]*m[15] - m[5]*m[14]*m[11] - m[6]*m[9]*m[15] + m[6]*m[13]*m[11] + m[7]*m[9]*m[14] - m[7]*m[13]*m[10];\n  r[1] = -m[1]*m[10]*m[15] + m[1]*m[14]*m[11] + m[2]*m[9]*m[15] - m[2]*m[13]*m[11] - m[3]*m[9]*m[14] + m[3]*m[13]*m[10];\n  r[2] = m[1]*m[6]*m[15] - m[1]*m[14]*m[7] - m[2]*m[5]*m[15] + m[2]*m[13]*m[7] + m[3]*m[5]*m[14] - m[3]*m[13]*m[6];\n  r[3] = -m[1]*m[6]*m[11] + m[1]*m[10]*m[7] + m[2]*m[5]*m[11] - m[2]*m[9]*m[7] - m[3]*m[5]*m[10] + m[3]*m[9]*m[6];\n\n  r[4] = -m[4]*m[10]*m[15] + m[4]*m[14]*m[11] + m[6]*m[8]*m[15] - m[6]*m[12]*m[11] - m[7]*m[8]*m[14] + m[7]*m[12]*m[10];\n  r[5] = m[0]*m[10]*m[15] - m[0]*m[14]*m[11] - m[2]*m[8]*m[15] + m[2]*m[12]*m[11] + m[3]*m[8]*m[14] - m[3]*m[12]*m[10];\n  r[6] = -m[0]*m[6]*m[15] + m[0]*m[14]*m[7] + m[2]*m[4]*m[15] - m[2]*m[12]*m[7] - m[3]*m[4]*m[14] + m[3]*m[12]*m[6];\n  r[7] = m[0]*m[6]*m[11] - m[0]*m[10]*m[7] - m[2]*m[4]*m[11] + m[2]*m[8]*m[7] + m[3]*m[4]*m[10] - m[3]*m[8]*m[6];\n\n  r[8] = m[4]*m[9]*m[15] - m[4]*m[13]*m[11] - m[5]*m[8]*m[15] + m[5]*m[12]*m[11] + m[7]*m[8]*m[13] - m[7]*m[12]*m[9];\n  r[9] = -m[0]*m[9]*m[15] + m[0]*m[13]*m[11] + m[1]*m[8]*m[15] - m[1]*m[12]*m[11] - m[3]*m[8]*m[13] + m[3]*m[12]*m[9];\n  r[10] = m[0]*m[5]*m[15] - m[0]*m[13]*m[7] - m[1]*m[4]*m[15] + m[1]*m[12]*m[7] + m[3]*m[4]*m[13] - m[3]*m[12]*m[5];\n  r[11] = -m[0]*m[5]*m[11] + m[0]*m[9]*m[7] + m[1]*m[4]*m[11] - m[1]*m[8]*m[7] - m[3]*m[4]*m[9] + m[3]*m[8]*m[5];\n\n  r[12] = -m[4]*m[9]*m[14] + m[4]*m[13]*m[10] + m[5]*m[8]*m[14] - m[5]*m[12]*m[10] - m[6]*m[8]*m[13] + m[6]*m[12]*m[9];\n  r[13] = m[0]*m[9]*m[14] - m[0]*m[13]*m[10] - m[1]*m[8]*m[14] + m[1]*m[12]*m[10] + m[2]*m[8]*m[13] - m[2]*m[12]*m[9];\n  r[14] = -m[0]*m[5]*m[14] + m[0]*m[13]*m[6] + m[1]*m[4]*m[14] - m[1]*m[12]*m[6] - m[2]*m[4]*m[13] + m[2]*m[12]*m[5];\n  r[15] = m[0]*m[5]*m[10] - m[0]*m[9]*m[6] - m[1]*m[4]*m[10] + m[1]*m[8]*m[6] + m[2]*m[4]*m[9] - m[2]*m[8]*m[5];\n\n  var det = m[0]*r[0] + m[1]*r[4] + m[2]*r[8] + m[3]*r[12];\n  for (var i = 0; i < 16; i++) r[i] /= det;\n  return result;\n};\n\n// ### GL.Matrix.transpose(matrix[, result])\n//\n// Returns `matrix`, exchanging columns for rows. You can optionally pass an\n// existing matrix in `result` to avoid allocating a new matrix.\nMatrix.transpose = function(matrix, result) {\n  result = result || new Matrix();\n  var m = matrix.m, r = result.m;\n  r[0] = m[0]; r[1] = m[4]; r[2] = m[8]; r[3] = m[12];\n  r[4] = m[1]; r[5] = m[5]; r[6] = m[9]; r[7] = m[13];\n  r[8] = m[2]; r[9] = m[6]; r[10] = m[10]; r[11] = m[14];\n  r[12] = m[3]; r[13] = m[7]; r[14] = m[11]; r[15] = m[15];\n  return result;\n};\n\n// ### GL.Matrix.multiply(left, right[, result])\n//\n// Returns the concatenation of the transforms for `left` and `right`. You can\n// optionally pass an existing matrix in `result` to avoid allocating a new\n// matrix. This emulates the OpenGL function `glMultMatrix()`.\nMatrix.multiply = function(left, right, result) {\n  result = result || new Matrix();\n  var a = left.m, b = right.m, r = result.m;\n\n  r[0] = a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12];\n  r[1] = a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13];\n  r[2] = a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14];\n  r[3] = a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15];\n\n  r[4] = a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12];\n  r[5] = a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13];\n  r[6] = a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14];\n  r[7] = a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15];\n\n  r[8] = a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12];\n  r[9] = a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13];\n  r[10] = a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14];\n  r[11] = a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15];\n\n  r[12] = a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12];\n  r[13] = a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13];\n  r[14] = a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14];\n  r[15] = a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15];\n\n  return result;\n};\n\n// ### GL.Matrix.identity([result])\n//\n// Returns an identity matrix. You can optionally pass an existing matrix in\n// `result` to avoid allocating a new matrix. This emulates the OpenGL function\n// `glLoadIdentity()`.\nMatrix.identity = function(result) {\n  result = result || new Matrix();\n  var m = result.m;\n  m[0] = m[5] = m[10] = m[15] = 1;\n  m[1] = m[2] = m[3] = m[4] = m[6] = m[7] = m[8] = m[9] = m[11] = m[12] = m[13] = m[14] = 0;\n  return result;\n};\n\n// ### GL.Matrix.perspective(fov, aspect, near, far[, result])\n//\n// Returns a perspective transform matrix, which makes far away objects appear\n// smaller than nearby objects. The `aspect` argument should be the width\n// divided by the height of your viewport and `fov` is the top-to-bottom angle\n// of the field of view in degrees. You can optionally pass an existing matrix\n// in `result` to avoid allocating a new matrix. This emulates the OpenGL\n// function `gluPerspective()`.\nMatrix.perspective = function(fov, aspect, near, far, result) {\n  var y = Math.tan(fov * Math.PI / 360) * near;\n  var x = y * aspect;\n  return Matrix.frustum(-x, x, -y, y, near, far, result);\n};\n\n// ### GL.Matrix.frustum(left, right, bottom, top, near, far[, result])\n//\n// Sets up a viewing frustum, which is shaped like a truncated pyramid with the\n// camera where the point of the pyramid would be. You can optionally pass an\n// existing matrix in `result` to avoid allocating a new matrix. This emulates\n// the OpenGL function `glFrustum()`.\nMatrix.frustum = function(l, r, b, t, n, f, result) {\n  result = result || new Matrix();\n  var m = result.m;\n\n  m[0] = 2 * n / (r - l);\n  m[1] = 0;\n  m[2] = (r + l) / (r - l);\n  m[3] = 0;\n\n  m[4] = 0;\n  m[5] = 2 * n / (t - b);\n  m[6] = (t + b) / (t - b);\n  m[7] = 0;\n\n  m[8] = 0;\n  m[9] = 0;\n  m[10] = -(f + n) / (f - n);\n  m[11] = -2 * f * n / (f - n);\n\n  m[12] = 0;\n  m[13] = 0;\n  m[14] = -1;\n  m[15] = 0;\n\n  return result;\n};\n\n// ### GL.Matrix.ortho(left, right, bottom, top, near, far[, result])\n//\n// Returns an orthographic projection, in which objects are the same size no\n// matter how far away or nearby they are. You can optionally pass an existing\n// matrix in `result` to avoid allocating a new matrix. This emulates the OpenGL\n// function `glOrtho()`.\nMatrix.ortho = function(l, r, b, t, n, f, result) {\n  result = result || new Matrix();\n  var m = result.m;\n\n  m[0] = 2 / (r - l);\n  m[1] = 0;\n  m[2] = 0;\n  m[3] = -(r + l) / (r - l);\n\n  m[4] = 0;\n  m[5] = 2 / (t - b);\n  m[6] = 0;\n  m[7] = -(t + b) / (t - b);\n\n  m[8] = 0;\n  m[9] = 0;\n  m[10] = -2 / (f - n);\n  m[11] = -(f + n) / (f - n);\n\n  m[12] = 0;\n  m[13] = 0;\n  m[14] = 0;\n  m[15] = 1;\n\n  return result;\n};\n\n// ### GL.Matrix.scale(x, y, z[, result])\n//\n// This emulates the OpenGL function `glScale()`. You can optionally pass an\n// existing matrix in `result` to avoid allocating a new matrix.\nMatrix.scale = function(x, y, z, result) {\n  result = result || new Matrix();\n  var m = result.m;\n\n  m[0] = x;\n  m[1] = 0;\n  m[2] = 0;\n  m[3] = 0;\n\n  m[4] = 0;\n  m[5] = y;\n  m[6] = 0;\n  m[7] = 0;\n\n  m[8] = 0;\n  m[9] = 0;\n  m[10] = z;\n  m[11] = 0;\n\n  m[12] = 0;\n  m[13] = 0;\n  m[14] = 0;\n  m[15] = 1;\n\n  return result;\n};\n\n// ### GL.Matrix.translate(x, y, z[, result])\n//\n// This emulates the OpenGL function `glTranslate()`. You can optionally pass\n// an existing matrix in `result` to avoid allocating a new matrix.\nMatrix.translate = function(x, y, z, result) {\n  result = result || new Matrix();\n  var m = result.m;\n\n  m[0] = 1;\n  m[1] = 0;\n  m[2] = 0;\n  m[3] = x;\n\n  m[4] = 0;\n  m[5] = 1;\n  m[6] = 0;\n  m[7] = y;\n\n  m[8] = 0;\n  m[9] = 0;\n  m[10] = 1;\n  m[11] = z;\n\n  m[12] = 0;\n  m[13] = 0;\n  m[14] = 0;\n  m[15] = 1;\n\n  return result;\n};\n\n// ### GL.Matrix.rotate(a, x, y, z[, result])\n//\n// Returns a matrix that rotates by `a` degrees around the vector `x, y, z`.\n// You can optionally pass an existing matrix in `result` to avoid allocating\n// a new matrix. This emulates the OpenGL function `glRotate()`.\nMatrix.rotate = function(a, x, y, z, result) {\n  if (!a || (!x && !y && !z)) {\n    return Matrix.identity(result);\n  }\n\n  result = result || new Matrix();\n  var m = result.m;\n\n  var d = Math.sqrt(x*x + y*y + z*z);\n  a *= Math.PI / 180; x /= d; y /= d; z /= d;\n  var c = Math.cos(a), s = Math.sin(a), t = 1 - c;\n\n  m[0] = x * x * t + c;\n  m[1] = x * y * t - z * s;\n  m[2] = x * z * t + y * s;\n  m[3] = 0;\n\n  m[4] = y * x * t + z * s;\n  m[5] = y * y * t + c;\n  m[6] = y * z * t - x * s;\n  m[7] = 0;\n\n  m[8] = z * x * t - y * s;\n  m[9] = z * y * t + x * s;\n  m[10] = z * z * t + c;\n  m[11] = 0;\n\n  m[12] = 0;\n  m[13] = 0;\n  m[14] = 0;\n  m[15] = 1;\n\n  return result;\n};\n\n// ### GL.Matrix.lookAt(ex, ey, ez, cx, cy, cz, ux, uy, uz[, result])\n//\n// Returns a matrix that puts the camera at the eye point `ex, ey, ez` looking\n// toward the center point `cx, cy, cz` with an up direction of `ux, uy, uz`.\n// You can optionally pass an existing matrix in `result` to avoid allocating\n// a new matrix. This emulates the OpenGL function `gluLookAt()`.\nMatrix.lookAt = function(ex, ey, ez, cx, cy, cz, ux, uy, uz, result) {\n  result = result || new Matrix();\n  var m = result.m;\n\n  var e = new Vector(ex, ey, ez);\n  var c = new Vector(cx, cy, cz);\n  var u = new Vector(ux, uy, uz);\n  var f = e.subtract(c).unit();\n  var s = u.cross(f).unit();\n  var t = f.cross(s).unit();\n\n  m[0] = s.x;\n  m[1] = s.y;\n  m[2] = s.z;\n  m[3] = -s.dot(e);\n\n  m[4] = t.x;\n  m[5] = t.y;\n  m[6] = t.z;\n  m[7] = -t.dot(e);\n\n  m[8] = f.x;\n  m[9] = f.y;\n  m[10] = f.z;\n  m[11] = -f.dot(e);\n\n  m[12] = 0;\n  m[13] = 0;\n  m[14] = 0;\n  m[15] = 1;\n\n  return result;\n};\n\n// src/mesh.js\n// Represents indexed triangle geometry with arbitrary additional attributes.\n// You need a shader to draw a mesh; meshes can't draw themselves.\n//\n// A mesh is a collection of `GL.Buffer` objects which are either vertex buffers\n// (holding per-vertex attributes) or index buffers (holding the order in which\n// vertices are rendered). By default, a mesh has a position vertex buffer called\n// `vertices` and a triangle index buffer called `triangles`. New buffers can be\n// added using `addVertexBuffer()` and `addIndexBuffer()`. Two strings are\n// required when adding a new vertex buffer, the name of the data array on the\n// mesh instance and the name of the GLSL attribute in the vertex shader.\n//\n// Example usage:\n//\n//     var mesh = new GL.Mesh({ coords: true, lines: true });\n//\n//     // Default attribute \"vertices\", available as \"gl_Vertex\" in\n//     // the vertex shader\n//     mesh.vertices = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]];\n//\n//     // Optional attribute \"coords\" enabled in constructor,\n//     // available as \"gl_TexCoord\" in the vertex shader\n//     mesh.coords = [[0, 0], [1, 0], [0, 1], [1, 1]];\n//\n//     // Custom attribute \"weights\", available as \"weight\" in the\n//     // vertex shader\n//     mesh.addVertexBuffer('weights', 'weight');\n//     mesh.weights = [1, 0, 0, 1];\n//\n//     // Default index buffer \"triangles\"\n//     mesh.triangles = [[0, 1, 2], [2, 1, 3]];\n//\n//     // Optional index buffer \"lines\" enabled in constructor\n//     mesh.lines = [[0, 1], [0, 2], [1, 3], [2, 3]];\n//\n//     // Upload provided data to GPU memory\n//     mesh.compile();\n\n// ### new GL.Indexer()\n//\n// Generates indices into a list of unique objects from a stream of objects\n// that may contain duplicates. This is useful for generating compact indexed\n// meshes from unindexed data.\nfunction Indexer() {\n  this.unique = [];\n  this.indices = [];\n  this.map = {};\n}\n\nIndexer.prototype = {\n  // ### .add(v)\n  //\n  // Adds the object `obj` to `unique` if it hasn't already been added. Returns\n  // the index of `obj` in `unique`.\n  add: function(obj) {\n    var key = JSON.stringify(obj);\n    if (!(key in this.map)) {\n      this.map[key] = this.unique.length;\n      this.unique.push(obj);\n    }\n    return this.map[key];\n  }\n};\n\n// ### new GL.Buffer(target, type)\n//\n// Provides a simple method of uploading data to a GPU buffer. Example usage:\n//\n//     var vertices = new GL.Buffer(gl.ARRAY_BUFFER, Float32Array);\n//     var indices = new GL.Buffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array);\n//     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]];\n//     indices.data = [[0, 1, 2], [2, 1, 3]];\n//     vertices.compile();\n//     indices.compile();\n//\nfunction Buffer(target, type) {\n  this.buffer = null;\n  this.target = target;\n  this.type = type;\n  this.data = [];\n}\n\nBuffer.prototype = {\n  // ### .compile(type)\n  //\n  // Upload the contents of `data` to the GPU in preparation for rendering. The\n  // data must be a list of lists where each inner list has the same length. For\n  // example, each element of data for vertex normals would be a list of length three.\n  // This will remember the data length and element length for later use by shaders.\n  // The type can be either `gl.STATIC_DRAW` or `gl.DYNAMIC_DRAW`, and defaults to\n  // `gl.STATIC_DRAW`.\n  //\n  // This could have used `[].concat.apply([], this.data)` to flatten\n  // the array but Google Chrome has a maximum number of arguments so the\n  // concatenations are chunked to avoid that limit.\n  compile: function(type) {\n    var data = [];\n    for (var i = 0, chunk = 10000; i < this.data.length; i += chunk) {\n      data = Array.prototype.concat.apply(data, this.data.slice(i, i + chunk));\n    }\n    var spacing = this.data.length ? data.length / this.data.length : 0;\n    if (spacing != Math.round(spacing)) throw new Error('buffer elements not of consistent size, average size is ' + spacing);\n    this.buffer = this.buffer || gl.createBuffer();\n    this.buffer.length = data.length;\n    this.buffer.spacing = spacing;\n    gl.bindBuffer(this.target, this.buffer);\n    gl.bufferData(this.target, new this.type(data), type || gl.STATIC_DRAW);\n  }\n};\n\n// ### new GL.Mesh([options])\n//\n// Represents a collection of vertex buffers and index buffers. Each vertex\n// buffer maps to one attribute in GLSL and has a corresponding property set\n// on the Mesh instance. There is one vertex buffer by default: `vertices`,\n// which maps to `gl_Vertex`. The `coords`, `normals`, and `colors` vertex\n// buffers map to `gl_TexCoord`, `gl_Normal`, and `gl_Color` respectively,\n// and can be enabled by setting the corresponding options to true. There are\n// two index buffers, `triangles` and `lines`, which are used for rendering\n// `gl.TRIANGLES` and `gl.LINES`, respectively. Only `triangles` is enabled by\n// default, although `computeWireframe()` will add a normal buffer if it wasn't\n// initially enabled.\nfunction Mesh(options) {\n  options = options || {};\n  this.vertexBuffers = {};\n  this.indexBuffers = {};\n  this.addVertexBuffer('vertices', 'gl_Vertex');\n  if (options.coords) this.addVertexBuffer('coords', 'gl_TexCoord');\n  if (options.normals) this.addVertexBuffer('normals', 'gl_Normal');\n  if (options.colors) this.addVertexBuffer('colors', 'gl_Color');\n  if (!('triangles' in options) || options.triangles) this.addIndexBuffer('triangles');\n  if (options.lines) this.addIndexBuffer('lines');\n}\n\nMesh.prototype = {\n  // ### .addVertexBuffer(name, attribute)\n  //\n  // Add a new vertex buffer with a list as a property called `name` on this object\n  // and map it to the attribute called `attribute` in all shaders that draw this mesh.\n  addVertexBuffer: function(name, attribute) {\n    var buffer = this.vertexBuffers[attribute] = new Buffer(gl.ARRAY_BUFFER, Float32Array);\n    buffer.name = name;\n    this[name] = [];\n  },\n\n  // ### .addIndexBuffer(name)\n  //\n  // Add a new index buffer with a list as a property called `name` on this object.\n  addIndexBuffer: function(name) {\n    var buffer = this.indexBuffers[name] = new Buffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array);\n    this[name] = [];\n  },\n\n  // ### .compile()\n  //\n  // Upload all attached buffers to the GPU in preparation for rendering. This\n  // doesn't need to be called every frame, only needs to be done when the data\n  // changes.\n  compile: function() {\n    for (var attribute in this.vertexBuffers) {\n      var buffer = this.vertexBuffers[attribute];\n      buffer.data = this[buffer.name];\n      buffer.compile();\n    }\n\n    for (var name in this.indexBuffers) {\n      var buffer = this.indexBuffers[name];\n      buffer.data = this[name];\n      buffer.compile();\n    }\n  },\n\n  // ### .transform(matrix)\n  //\n  // Transform all vertices by `matrix` and all normals by the inverse transpose\n  // of `matrix`.\n  transform: function(matrix) {\n    this.vertices = this.vertices.map(function(v) {\n      return matrix.transformPoint(Vector.fromArray(v)).toArray();\n    });\n    if (this.normals) {\n      var invTrans = matrix.inverse().transpose();\n      this.normals = this.normals.map(function(n) {\n        return invTrans.transformVector(Vector.fromArray(n)).unit().toArray();\n      });\n    }\n    this.compile();\n    return this;\n  },\n\n  // ### .computeNormals()\n  //\n  // Computes a new normal for each vertex from the average normal of the\n  // neighboring triangles. This means adjacent triangles must share vertices\n  // for the resulting normals to be smooth.\n  computeNormals: function() {\n    if (!this.normals) this.addVertexBuffer('normals', 'gl_Normal');\n    for (var i = 0; i < this.vertices.length; i++) {\n      this.normals[i] = new Vector();\n    }\n    for (var i = 0; i < this.triangles.length; i++) {\n      var t = this.triangles[i];\n      var a = Vector.fromArray(this.vertices[t[0]]);\n      var b = Vector.fromArray(this.vertices[t[1]]);\n      var c = Vector.fromArray(this.vertices[t[2]]);\n      var normal = b.subtract(a).cross(c.subtract(a)).unit();\n      this.normals[t[0]] = this.normals[t[0]].add(normal);\n      this.normals[t[1]] = this.normals[t[1]].add(normal);\n      this.normals[t[2]] = this.normals[t[2]].add(normal);\n    }\n    for (var i = 0; i < this.vertices.length; i++) {\n      this.normals[i] = this.normals[i].unit().toArray();\n    }\n    this.compile();\n    return this;\n  },\n\n  // ### .computeWireframe()\n  //\n  // Populate the `lines` index buffer from the `triangles` index buffer.\n  computeWireframe: function() {\n    var indexer = new Indexer();\n    for (var i = 0; i < this.triangles.length; i++) {\n      var t = this.triangles[i];\n      for (var j = 0; j < t.length; j++) {\n        var a = t[j], b = t[(j + 1) % t.length];\n        indexer.add([Math.min(a, b), Math.max(a, b)]);\n      }\n    }\n    if (!this.lines) this.addIndexBuffer('lines');\n    this.lines = indexer.unique;\n    this.compile();\n    return this;\n  },\n\n  // ### .getAABB()\n  //\n  // Computes the axis-aligned bounding box, which is an object whose `min` and\n  // `max` properties contain the minimum and maximum coordinates of all vertices.\n  getAABB: function() {\n    var aabb = { min: new Vector(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE) };\n    aabb.max = aabb.min.negative();\n    for (var i = 0; i < this.vertices.length; i++) {\n      var v = Vector.fromArray(this.vertices[i]);\n      aabb.min = Vector.min(aabb.min, v);\n      aabb.max = Vector.max(aabb.max, v);\n    }\n    return aabb;\n  },\n\n  // ### .getBoundingSphere()\n  //\n  // Computes a sphere that contains all vertices (not necessarily the smallest\n  // sphere). The returned object has two properties, `center` and `radius`.\n  getBoundingSphere: function() {\n    var aabb = this.getAABB();\n    var sphere = { center: aabb.min.add(aabb.max).divide(2), radius: 0 };\n    for (var i = 0; i < this.vertices.length; i++) {\n      sphere.radius = Math.max(sphere.radius,\n        Vector.fromArray(this.vertices[i]).subtract(sphere.center).length());\n    }\n    return sphere;\n  }\n};\n\n// ### GL.Mesh.plane([options])\n//\n// Generates a square 2x2 mesh the xy plane centered at the origin. The\n// `options` argument specifies options to pass to the mesh constructor.\n// Additional options include `detailX` and `detailY`, which set the tesselation\n// in x and y, and `detail`, which sets both `detailX` and `detailY` at once.\n// Two triangles are generated by default.\n// Example usage:\n//\n//     var mesh1 = GL.Mesh.plane();\n//     var mesh2 = GL.Mesh.plane({ detail: 5 });\n//     var mesh3 = GL.Mesh.plane({ detailX: 20, detailY: 40 });\n//\nMesh.plane = function(options) {\n  options = options || {};\n  var mesh = new Mesh(options);\n  var detailX = options.detailX || options.detail || 1;\n  var detailY = options.detailY || options.detail || 1;\n\n  for (var y = 0; y <= detailY; y++) {\n    var t = y / detailY;\n    for (var x = 0; x <= detailX; x++) {\n      var s = x / detailX;\n      mesh.vertices.push([2 * s - 1, 2 * t - 1, 0]);\n      if (mesh.coords) mesh.coords.push([s, t]);\n      if (mesh.normals) mesh.normals.push([0, 0, 1]);\n      if (x < detailX && y < detailY) {\n        var i = x + y * (detailX + 1);\n        mesh.triangles.push([i, i + 1, i + detailX + 1]);\n        mesh.triangles.push([i + detailX + 1, i + 1, i + detailX + 2]);\n      }\n    }\n  }\n\n  mesh.compile();\n  return mesh;\n};\n\nvar cubeData = [\n  [0, 4, 2, 6, -1, 0, 0], // -x\n  [1, 3, 5, 7, +1, 0, 0], // +x\n  [0, 1, 4, 5, 0, -1, 0], // -y\n  [2, 6, 3, 7, 0, +1, 0], // +y\n  [0, 2, 1, 3, 0, 0, -1], // -z\n  [4, 5, 6, 7, 0, 0, +1]  // +z\n];\n\nfunction pickOctant(i) {\n  return new Vector((i & 1) * 2 - 1, (i & 2) - 1, (i & 4) / 2 - 1);\n}\n\n// ### GL.Mesh.cube([options])\n//\n// Generates a 2x2x2 box centered at the origin. The `options` argument\n// specifies options to pass to the mesh constructor.\nMesh.cube = function(options) {\n  var mesh = new Mesh(options);\n\n  for (var i = 0; i < cubeData.length; i++) {\n    var data = cubeData[i], v = i * 4;\n    for (var j = 0; j < 4; j++) {\n      var d = data[j];\n      mesh.vertices.push(pickOctant(d).toArray());\n      if (mesh.coords) mesh.coords.push([j & 1, (j & 2) / 2]);\n      if (mesh.normals) mesh.normals.push(data.slice(4, 7));\n    }\n    mesh.triangles.push([v, v + 1, v + 2]);\n    mesh.triangles.push([v + 2, v + 1, v + 3]);\n  }\n\n  mesh.compile();\n  return mesh;\n};\n\n// ### GL.Mesh.sphere([options])\n//\n// Generates a geodesic sphere of radius 1. The `options` argument specifies\n// options to pass to the mesh constructor in addition to the `detail` option,\n// which controls the tesselation level. The detail is `6` by default.\n// Example usage:\n//\n//     var mesh1 = GL.Mesh.sphere();\n//     var mesh2 = GL.Mesh.sphere({ detail: 2 });\n//\nMesh.sphere = function(options) {\n  function tri(a, b, c) { return flip ? [a, c, b] : [a, b, c]; }\n  function fix(x) { return x + (x - x * x) / 2; }\n  options = options || {};\n  var mesh = new Mesh(options);\n  var indexer = new Indexer();\n  var detail = options.detail || 6;\n\n  for (var octant = 0; octant < 8; octant++) {\n    var scale = pickOctant(octant);\n    var flip = scale.x * scale.y * scale.z > 0;\n    var data = [];\n    for (var i = 0; i <= detail; i++) {\n      // Generate a row of vertices on the surface of the sphere\n      // using barycentric coordinates.\n      for (var j = 0; i + j <= detail; j++) {\n        var a = i / detail;\n        var b = j / detail;\n        var c = (detail - i - j) / detail;\n        var vertex = { vertex: new Vector(fix(a), fix(b), fix(c)).unit().multiply(scale).toArray() };\n        if (mesh.coords) vertex.coord = scale.y > 0 ? [1 - a, c] : [c, 1 - a];\n        data.push(indexer.add(vertex));\n      }\n\n      // Generate triangles from this row and the previous row.\n      if (i > 0) {\n        for (var j = 0; i + j <= detail; j++) {\n          var a = (i - 1) * (detail + 1) + ((i - 1) - (i - 1) * (i - 1)) / 2 + j;\n          var b = i * (detail + 1) + (i - i * i) / 2 + j;\n          mesh.triangles.push(tri(data[a], data[a + 1], data[b]));\n          if (i + j < detail) {\n            mesh.triangles.push(tri(data[b], data[a + 1], data[b + 1]));\n          }\n        }\n      }\n    }\n  }\n\n  // Reconstruct the geometry from the indexer.\n  mesh.vertices = indexer.unique.map(function(v) { return v.vertex; });\n  if (mesh.coords) mesh.coords = indexer.unique.map(function(v) { return v.coord; });\n  if (mesh.normals) mesh.normals = mesh.vertices;\n  mesh.compile();\n  return mesh;\n};\n\n// ### GL.Mesh.load(json[, options])\n//\n// Creates a mesh from the JSON generated by the `convert/convert.py` script.\n// Example usage:\n//\n//     var data = {\n//       vertices: [[0, 0, 0], [1, 0, 0], [0, 1, 0]],\n//       triangles: [[0, 1, 2]]\n//     };\n//     var mesh = GL.Mesh.load(data);\n//\nMesh.load = function(json, options) {\n  options = options || {};\n  if (!('coords' in options)) options.coords = !!json.coords;\n  if (!('normals' in options)) options.normals = !!json.normals;\n  if (!('colors' in options)) options.colors = !!json.colors;\n  if (!('triangles' in options)) options.triangles = !!json.triangles;\n  if (!('lines' in options)) options.lines = !!json.lines;\n  var mesh = new Mesh(options);\n  mesh.vertices = json.vertices;\n  if (mesh.coords) mesh.coords = json.coords;\n  if (mesh.normals) mesh.normals = json.normals;\n  if (mesh.colors) mesh.colors = json.colors;\n  if (mesh.triangles) mesh.triangles = json.triangles;\n  if (mesh.lines) mesh.lines = json.lines;\n  mesh.compile();\n  return mesh;\n};\n\n// src/raytracer.js\n// Provides a convenient raytracing interface.\n\n// ### new GL.HitTest([t, hit, normal])\n//\n// This is the object used to return hit test results. If there are no\n// arguments, the constructed argument represents a hit infinitely far\n// away.\nfunction HitTest(t, hit, normal) {\n  this.t = arguments.length ? t : Number.MAX_VALUE;\n  this.hit = hit;\n  this.normal = normal;\n}\n\n// ### .mergeWith(other)\n//\n// Changes this object to be the closer of the two hit test results.\nHitTest.prototype = {\n  mergeWith: function(other) {\n    if (other.t > 0 && other.t < this.t) {\n      this.t = other.t;\n      this.hit = other.hit;\n      this.normal = other.normal;\n    }\n  }\n};\n\n// ### new GL.Raytracer()\n//\n// This will read the current modelview matrix, projection matrix, and viewport,\n// reconstruct the eye position, and store enough information to later generate\n// per-pixel rays using `getRayForPixel()`.\n//\n// Example usage:\n//\n//     var tracer = new GL.Raytracer();\n//     var ray = tracer.getRayForPixel(\n//       gl.canvas.width / 2,\n//       gl.canvas.height / 2);\n//     var result = GL.Raytracer.hitTestSphere(\n//       tracer.eye, ray, new GL.Vector(0, 0, 0), 1);\nfunction Raytracer() {\n  var v = gl.getParameter(gl.VIEWPORT);\n  var m = gl.modelviewMatrix.m;\n\n  var axisX = new Vector(m[0], m[4], m[8]);\n  var axisY = new Vector(m[1], m[5], m[9]);\n  var axisZ = new Vector(m[2], m[6], m[10]);\n  var offset = new Vector(m[3], m[7], m[11]);\n  this.eye = new Vector(-offset.dot(axisX), -offset.dot(axisY), -offset.dot(axisZ));\n\n  var minX = v[0], maxX = minX + v[2];\n  var minY = v[1], maxY = minY + v[3];\n  this.ray00 = gl.unProject(minX, minY, 1).subtract(this.eye);\n  this.ray10 = gl.unProject(maxX, minY, 1).subtract(this.eye);\n  this.ray01 = gl.unProject(minX, maxY, 1).subtract(this.eye);\n  this.ray11 = gl.unProject(maxX, maxY, 1).subtract(this.eye);\n  this.viewport = v;\n}\n\nRaytracer.prototype = {\n  // ### .getRayForPixel(x, y)\n  //\n  // Returns the ray originating from the camera and traveling through the pixel `x, y`.\n  getRayForPixel: function(x, y) {\n    x = (x - this.viewport[0]) / this.viewport[2];\n    y = 1 - (y - this.viewport[1]) / this.viewport[3];\n    var ray0 = Vector.lerp(this.ray00, this.ray10, x);\n    var ray1 = Vector.lerp(this.ray01, this.ray11, x);\n    return Vector.lerp(ray0, ray1, y).unit();\n  }\n};\n\n// ### GL.Raytracer.hitTestBox(origin, ray, min, max)\n//\n// Traces the ray starting from `origin` along `ray` against the axis-aligned box\n// whose coordinates extend from `min` to `max`. Returns a `HitTest` with the\n// information or `null` for no intersection.\n//\n// This implementation uses the [slab intersection method](http://www.siggraph.org/education/materials/HyperGraph/raytrace/rtinter3.htm).\nRaytracer.hitTestBox = function(origin, ray, min, max) {\n  var tMin = min.subtract(origin).divide(ray);\n  var tMax = max.subtract(origin).divide(ray);\n  var t1 = Vector.min(tMin, tMax);\n  var t2 = Vector.max(tMin, tMax);\n  var tNear = t1.max();\n  var tFar = t2.min();\n\n  if (tNear > 0 && tNear < tFar) {\n    var epsilon = 1.0e-6, hit = origin.add(ray.multiply(tNear));\n    min = min.add(epsilon);\n    max = max.subtract(epsilon);\n    return new HitTest(tNear, hit, new Vector(\n      (hit.x > max.x) - (hit.x < min.x),\n      (hit.y > max.y) - (hit.y < min.y),\n      (hit.z > max.z) - (hit.z < min.z)\n    ));\n  }\n\n  return null;\n};\n\n// ### GL.Raytracer.hitTestSphere(origin, ray, center, radius)\n//\n// Traces the ray starting from `origin` along `ray` against the sphere defined\n// by `center` and `radius`. Returns a `HitTest` with the information or `null`\n// for no intersection.\nRaytracer.hitTestSphere = function(origin, ray, center, radius) {\n  var offset = origin.subtract(center);\n  var a = ray.dot(ray);\n  var b = 2 * ray.dot(offset);\n  var c = offset.dot(offset) - radius * radius;\n  var discriminant = b * b - 4 * a * c;\n\n  if (discriminant > 0) {\n    var t = (-b - Math.sqrt(discriminant)) / (2 * a), hit = origin.add(ray.multiply(t));\n    return new HitTest(t, hit, hit.subtract(center).divide(radius));\n  }\n\n  return null;\n};\n\n// ### GL.Raytracer.hitTestTriangle(origin, ray, a, b, c)\n//\n// Traces the ray starting from `origin` along `ray` against the triangle defined\n// by the points `a`, `b`, and `c`. Returns a `HitTest` with the information or\n// `null` for no intersection.\nRaytracer.hitTestTriangle = function(origin, ray, a, b, c) {\n  var ab = b.subtract(a);\n  var ac = c.subtract(a);\n  var normal = ab.cross(ac).unit();\n  var t = normal.dot(a.subtract(origin)) / normal.dot(ray);\n\n  if (t > 0) {\n    var hit = origin.add(ray.multiply(t));\n    var toHit = hit.subtract(a);\n    var dot00 = ac.dot(ac);\n    var dot01 = ac.dot(ab);\n    var dot02 = ac.dot(toHit);\n    var dot11 = ab.dot(ab);\n    var dot12 = ab.dot(toHit);\n    var divide = dot00 * dot11 - dot01 * dot01;\n    var u = (dot11 * dot02 - dot01 * dot12) / divide;\n    var v = (dot00 * dot12 - dot01 * dot02) / divide;\n    if (u >= 0 && v >= 0 && u + v <= 1) return new HitTest(t, hit, normal);\n  }\n\n  return null;\n};\n\n// src/shader.js\n// Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\n// prefixed with `gl_`, are automatically added to all shader sources to make\n// simple shaders easier to write.\n//\n// Example usage:\n//\n//     var shader = new GL.Shader('\\\n//       void main() {\\\n//         gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\\\n//       }\\\n//     ', '\\\n//       uniform vec4 color;\\\n//       void main() {\\\n//         gl_FragColor = color;\\\n//       }\\\n//     ');\n//\n//     shader.uniforms({\n//       color: [1, 0, 0, 1]\n//     }).draw(mesh);\n\nfunction regexMap(regex, text, callback) {\n  var result;\n  while ((result = regex.exec(text)) != null) {\n    callback(result);\n  }\n}\n\n// Non-standard names beginning with `gl_` must be mangled because they will\n// otherwise cause a compiler error.\nvar LIGHTGL_PREFIX = 'LIGHTGL';\n\n// ### new GL.Shader(vertexSource, fragmentSource)\n//\n// Compiles a shader program using the provided vertex and fragment shaders.\nfunction Shader(vertexSource, fragmentSource) {\n  // Allow passing in the id of an HTML script tag with the source\n  function followScriptTagById(id) {\n    var element = document.getElementById(id);\n    return element ? element.text : id;\n  }\n  vertexSource = followScriptTagById(vertexSource);\n  fragmentSource = followScriptTagById(fragmentSource);\n\n  // Headers are prepended to the sources to provide some automatic functionality.\n  var header = '\\\n    uniform mat3 gl_NormalMatrix;\\\n    uniform mat4 gl_ModelViewMatrix;\\\n    uniform mat4 gl_ProjectionMatrix;\\\n    uniform mat4 gl_ModelViewProjectionMatrix;\\\n    uniform mat4 gl_ModelViewMatrixInverse;\\\n    uniform mat4 gl_ProjectionMatrixInverse;\\\n    uniform mat4 gl_ModelViewProjectionMatrixInverse;\\\n  ';\n  var vertexHeader = header + '\\\n    attribute vec4 gl_Vertex;\\\n    attribute vec4 gl_TexCoord;\\\n    attribute vec3 gl_Normal;\\\n    attribute vec4 gl_Color;\\\n    vec4 ftransform() {\\\n      return gl_ModelViewProjectionMatrix * gl_Vertex;\\\n    }\\\n  ';\n  var fragmentHeader = '\\\n    precision highp float;\\\n  ' + header;\n\n  // Check for the use of built-in matrices that require expensive matrix\n  // multiplications to compute, and record these in `usedMatrices`.\n  var source = vertexSource + fragmentSource;\n  var usedMatrices = {};\n  regexMap(/\\b(gl_[^;]*)\\b;/g, header, function(groups) {\n    var name = groups[1];\n    if (source.indexOf(name) != -1) {\n      var capitalLetters = name.replace(/[a-z_]/g, '');\n      usedMatrices[capitalLetters] = LIGHTGL_PREFIX + name;\n    }\n  });\n  if (source.indexOf('ftransform') != -1) usedMatrices.MVPM = LIGHTGL_PREFIX + 'gl_ModelViewProjectionMatrix';\n  this.usedMatrices = usedMatrices;\n\n  // The `gl_` prefix must be substituted for something else to avoid compile\n  // errors, since it's a reserved prefix. This prefixes all reserved names with\n  // `_`. The header is inserted after any extensions, since those must come\n  // first.\n  function fix(header, source) {\n    var replaced = {};\n    var match = /^((\\s*\\/\\/.*\\n|\\s*#extension.*\\n)+)[^]*$/.exec(source);\n    source = match ? match[1] + header + source.substr(match[1].length) : header + source;\n    regexMap(/\\bgl_\\w+\\b/g, header, function(result) {\n      if (!(result in replaced)) {\n        source = source.replace(new RegExp('\\\\b' + result + '\\\\b', 'g'), LIGHTGL_PREFIX + result);\n        replaced[result] = true;\n      }\n    });\n    return source;\n  }\n  vertexSource = fix(vertexHeader, vertexSource);\n  fragmentSource = fix(fragmentHeader, fragmentSource);\n\n  // Compile and link errors are thrown as strings.\n  function compileSource(type, source) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error('compile error: ' + gl.getShaderInfoLog(shader));\n    }\n    return shader;\n  }\n  this.program = gl.createProgram();\n  gl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource));\n  gl.attachShader(this.program, compileSource(gl.FRAGMENT_SHADER, fragmentSource));\n  gl.linkProgram(this.program);\n  if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n    throw new Error('link error: ' + gl.getProgramInfoLog(this.program));\n  }\n  this.attributes = {};\n  this.uniformLocations = {};\n\n  // Sampler uniforms need to be uploaded using `gl.uniform1i()` instead of `gl.uniform1f()`.\n  // To do this automatically, we detect and remember all uniform samplers in the source code.\n  var isSampler = {};\n  regexMap(/uniform\\s+sampler(1D|2D|3D|Cube)\\s+(\\w+)\\s*;/g, vertexSource + fragmentSource, function(groups) {\n    isSampler[groups[2]] = 1;\n  });\n  this.isSampler = isSampler;\n}\n\nfunction isArray(obj) {\n  var str = Object.prototype.toString.call(obj);\n  return str == '[object Array]' || str == '[object Float32Array]';\n}\n\nfunction isNumber(obj) {\n  var str = Object.prototype.toString.call(obj);\n  return str == '[object Number]' || str == '[object Boolean]';\n}\n\nvar tempMatrix = new Matrix();\nvar resultMatrix = new Matrix();\n\nShader.prototype = {\n  // ### .uniforms(uniforms)\n  //\n  // Set a uniform for each property of `uniforms`. The correct `gl.uniform*()` method is\n  // inferred from the value types and from the stored uniform sampler flags.\n  uniforms: function(uniforms) {\n    gl.useProgram(this.program);\n\n    for (var name in uniforms) {\n      var location = this.uniformLocations[name] || gl.getUniformLocation(this.program, name);\n      if (!location) continue;\n      this.uniformLocations[name] = location;\n      var value = uniforms[name];\n      if (value instanceof Vector) {\n        value = [value.x, value.y, value.z];\n      } else if (value instanceof Matrix) {\n        value = value.m;\n      }\n      if (isArray(value)) {\n        switch (value.length) {\n          case 1: gl.uniform1fv(location, new Float32Array(value)); break;\n          case 2: gl.uniform2fv(location, new Float32Array(value)); break;\n          case 3: gl.uniform3fv(location, new Float32Array(value)); break;\n          case 4: gl.uniform4fv(location, new Float32Array(value)); break;\n          // Matrices are automatically transposed, since WebGL uses column-major\n          // indices instead of row-major indices.\n          case 9: gl.uniformMatrix3fv(location, false, new Float32Array([\n            value[0], value[3], value[6],\n            value[1], value[4], value[7],\n            value[2], value[5], value[8]\n          ])); break;\n          case 16: gl.uniformMatrix4fv(location, false, new Float32Array([\n            value[0], value[4], value[8], value[12],\n            value[1], value[5], value[9], value[13],\n            value[2], value[6], value[10], value[14],\n            value[3], value[7], value[11], value[15]\n          ])); break;\n          default: throw new Error('don\\'t know how to load uniform \"' + name + '\" of length ' + value.length);\n        }\n      } else if (isNumber(value)) {\n        (this.isSampler[name] ? gl.uniform1i : gl.uniform1f).call(gl, location, value);\n      } else {\n        throw new Error('attempted to set uniform \"' + name + '\" to invalid value ' + value);\n      }\n    }\n\n    return this;\n  },\n\n  // ### .draw(mesh[, mode])\n  //\n  // Sets all uniform matrix attributes, binds all relevant buffers, and draws the\n  // mesh geometry as indexed triangles or indexed lines. Set `mode` to `gl.LINES`\n  // (and either add indices to `lines` or call `computeWireframe()`) to draw the\n  // mesh in wireframe.\n  draw: function(mesh, mode) {\n    this.drawBuffers(mesh.vertexBuffers,\n      mesh.indexBuffers[mode == gl.LINES ? 'lines' : 'triangles'],\n      arguments.length < 2 ? gl.TRIANGLES : mode);\n  },\n\n  // ### .drawBuffers(vertexBuffers, indexBuffer, mode)\n  //\n  // Sets all uniform matrix attributes, binds all relevant buffers, and draws the\n  // indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\n  // names to `Buffer` objects of type `gl.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\n  // object of type `gl.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\n  // like `gl.TRIANGLES` or `gl.LINES`. This method automatically creates and caches\n  // vertex attribute pointers for attributes as needed.\n  drawBuffers: function(vertexBuffers, indexBuffer, mode) {\n    // Only construct up the built-in matrices we need for this shader.\n    var used = this.usedMatrices;\n    var MVM = gl.modelviewMatrix;\n    var PM = gl.projectionMatrix;\n    var MVMI = (used.MVMI || used.NM) ? MVM.inverse() : null;\n    var PMI = (used.PMI) ? PM.inverse() : null;\n    var MVPM = (used.MVPM || used.MVPMI) ? PM.multiply(MVM) : null;\n    var matrices = {};\n    if (used.MVM) matrices[used.MVM] = MVM;\n    if (used.MVMI) matrices[used.MVMI] = MVMI;\n    if (used.PM) matrices[used.PM] = PM;\n    if (used.PMI) matrices[used.PMI] = PMI;\n    if (used.MVPM) matrices[used.MVPM] = MVPM;\n    if (used.MVPMI) matrices[used.MVPMI] = MVPM.inverse();\n    if (used.NM) {\n      var m = MVMI.m;\n      matrices[used.NM] = [m[0], m[4], m[8], m[1], m[5], m[9], m[2], m[6], m[10]];\n    }\n    this.uniforms(matrices);\n\n    // Create and enable attribute pointers as necessary.\n    var length = 0;\n    for (var attribute in vertexBuffers) {\n      var buffer = vertexBuffers[attribute];\n      var location = this.attributes[attribute] ||\n        gl.getAttribLocation(this.program, attribute.replace(/^(gl_.*)$/, LIGHTGL_PREFIX + '$1'));\n      if (location == -1 || !buffer.buffer) continue;\n      this.attributes[attribute] = location;\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer.buffer);\n      gl.enableVertexAttribArray(location);\n      gl.vertexAttribPointer(location, buffer.buffer.spacing, gl.FLOAT, false, 0, 0);\n      length = buffer.buffer.length / buffer.buffer.spacing;\n    }\n\n    // Disable unused attribute pointers.\n    for (var attribute in this.attributes) {\n      if (!(attribute in vertexBuffers)) {\n        gl.disableVertexAttribArray(this.attributes[attribute]);\n      }\n    }\n\n    // Draw the geometry.\n    if (length && (!indexBuffer || indexBuffer.buffer)) {\n      if (indexBuffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer);\n        gl.drawElements(mode, indexBuffer.buffer.length, gl.UNSIGNED_SHORT, 0);\n      } else {\n        gl.drawArrays(mode, 0, length);\n      }\n    }\n\n    return this;\n  }\n};\n\n// src/texture.js\n// Provides a simple wrapper around WebGL textures that supports render-to-texture.\n\n// ### new GL.Texture(width, height[, options])\n//\n// The arguments `width` and `height` give the size of the texture in texels.\n// WebGL texture dimensions must be powers of two unless `filter` is set to\n// either `gl.NEAREST` or `gl.LINEAR` and `wrap` is set to `gl.CLAMP_TO_EDGE`\n// (which they are by default).\n//\n// Texture parameters can be passed in via the `options` argument.\n// Example usage:\n//\n//     var t = new GL.Texture(256, 256, {\n//       // Defaults to gl.LINEAR, set both at once with \"filter\"\n//       magFilter: gl.NEAREST,\n//       minFilter: gl.LINEAR,\n//\n//       // Defaults to gl.CLAMP_TO_EDGE, set both at once with \"wrap\"\n//       wrapS: gl.REPEAT,\n//       wrapT: gl.REPEAT,\n//\n//       format: gl.RGB, // Defaults to gl.RGBA\n//       type: gl.FLOAT // Defaults to gl.UNSIGNED_BYTE\n//     });\nfunction Texture(width, height, options) {\n  options = options || {};\n  this.id = gl.createTexture();\n  this.width = width;\n  this.height = height;\n  this.format = options.format || gl.RGBA;\n  this.type = options.type || gl.UNSIGNED_BYTE;\n  var magFilter = options.filter || options.magFilter || gl.LINEAR;\n  var minFilter = options.filter || options.minFilter || gl.LINEAR;\n  if (this.type === gl.FLOAT) {\n    if (!Texture.canUseFloatingPointTextures()) {\n      throw new Error('OES_texture_float is required but not supported');\n    }\n    if ((minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\n        !Texture.canUseFloatingPointLinearFiltering()) {\n      throw new Error('OES_texture_float_linear is required but not supported');\n    }\n  } else if (this.type === gl.HALF_FLOAT_OES) {\n    if (!Texture.canUseHalfFloatingPointTextures()) {\n      throw new Error('OES_texture_half_float is required but not supported');\n    }\n    if ((minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\n        !Texture.canUseHalfFloatingPointLinearFiltering()) {\n      throw new Error('OES_texture_half_float_linear is required but not supported');\n    }\n  }\n  gl.bindTexture(gl.TEXTURE_2D, this.id);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.wrap || options.wrapS || gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.wrap || options.wrapT || gl.CLAMP_TO_EDGE);\n  gl.texImage2D(gl.TEXTURE_2D, 0, this.format, width, height, 0, this.format, this.type, null);\n}\n\nvar framebuffer;\nvar renderbuffer;\nvar checkerboardCanvas;\n\nTexture.prototype = {\n  // ### .bind([unit])\n  //\n  // Bind this texture to the given texture unit (0-7, defaults to 0).\n  bind: function(unit) {\n    gl.activeTexture(gl.TEXTURE0 + (unit || 0));\n    gl.bindTexture(gl.TEXTURE_2D, this.id);\n  },\n\n  // ### .unbind([unit])\n  //\n  // Clear the given texture unit (0-7, defaults to 0).\n  unbind: function(unit) {\n    gl.activeTexture(gl.TEXTURE0 + (unit || 0));\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  },\n\n  // ### .canDrawTo()\n  //\n  // Check if rendering to this texture is supported. It may not be supported\n  // for floating-point textures on some configurations.\n  canDrawTo: function() {\n    framebuffer = framebuffer || gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.id, 0);\n    var result = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    return result;\n  },\n\n  // ### .drawTo(callback)\n  //\n  // Render all draw calls in `callback` to this texture. This method sets up\n  // a framebuffer with this texture as the color attachment and a renderbuffer\n  // as the depth attachment. It also temporarily changes the viewport to the\n  // size of the texture.\n  //\n  // Example usage:\n  //\n  //     texture.drawTo(function() {\n  //       gl.clearColor(1, 0, 0, 1);\n  //       gl.clear(gl.COLOR_BUFFER_BIT);\n  //     });\n  drawTo: function(callback) {\n    var v = gl.getParameter(gl.VIEWPORT);\n    framebuffer = framebuffer || gl.createFramebuffer();\n    renderbuffer = renderbuffer || gl.createRenderbuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    if (this.width != renderbuffer.width || this.height != renderbuffer.height) {\n      renderbuffer.width = this.width;\n      renderbuffer.height = this.height;\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.id, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderbuffer);\n    if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) != gl.FRAMEBUFFER_COMPLETE) {\n      throw new Error('Rendering to this texture is not supported (incomplete framebuffer)');\n    }\n    gl.viewport(0, 0, this.width, this.height);\n\n    callback();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.viewport(v[0], v[1], v[2], v[3]);\n  },\n\n  // ### .swapWith(other)\n  //\n  // Switch this texture with `other`, useful for the ping-pong rendering\n  // technique used in multi-stage rendering.\n  swapWith: function(other) {\n    var temp;\n    temp = other.id; other.id = this.id; this.id = temp;\n    temp = other.width; other.width = this.width; this.width = temp;\n    temp = other.height; other.height = this.height; this.height = temp;\n  }\n};\n\n// ### GL.Texture.fromImage(image[, options])\n//\n// Return a new image created from `image`, an `<img>` tag.\nTexture.fromImage = function(image, options) {\n  options = options || {};\n  var texture = new Texture(image.width, image.height, options);\n  try {\n    gl.texImage2D(gl.TEXTURE_2D, 0, texture.format, texture.format, texture.type, image);\n  } catch (e) {\n    if (location.protocol == 'file:') {\n      throw new Error('image not loaded for security reasons (serve this page over \"http://\" instead)');\n    } else {\n      throw new Error('image not loaded for security reasons (image must originate from the same ' +\n        'domain as this page or use Cross-Origin Resource Sharing)');\n    }\n  }\n  if (options.minFilter && options.minFilter != gl.NEAREST && options.minFilter != gl.LINEAR) {\n    gl.generateMipmap(gl.TEXTURE_2D);\n  }\n  return texture;\n};\n\n// ### GL.Texture.fromURL(url[, options])\n//\n// Returns a checkerboard texture that will switch to the correct texture when\n// it loads.\nTexture.fromURL = function(url, options) {\n  checkerboardCanvas = checkerboardCanvas || (function() {\n    var c = document.createElement('canvas').getContext('2d');\n    c.canvas.width = c.canvas.height = 128;\n    for (var y = 0; y < c.canvas.height; y += 16) {\n      for (var x = 0; x < c.canvas.width; x += 16) {\n        c.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD';\n        c.fillRect(x, y, 16, 16);\n      }\n    }\n    return c.canvas;\n  })();\n  var texture = Texture.fromImage(checkerboardCanvas, options);\n  var image = new Image();\n  var context = gl;\n  image.onload = function() {\n    context.makeCurrent();\n    Texture.fromImage(image, options).swapWith(texture);\n  };\n  image.src = url;\n  return texture;\n};\n\n// ### GL.Texture.canUseFloatingPointTextures()\n//\n// Returns false if `gl.FLOAT` is not supported as a texture type. This is the\n// `OES_texture_float` extension.\nTexture.canUseFloatingPointTextures = function() {\n  return !!gl.getExtension('OES_texture_float');\n};\n\n// ### GL.Texture.canUseFloatingPointLinearFiltering()\n//\n// Returns false if `gl.LINEAR` is not supported as a texture filter mode for\n// textures of type `gl.FLOAT`. This is the `OES_texture_float_linear`\n// extension.\nTexture.canUseFloatingPointLinearFiltering = function() {\n  return !!gl.getExtension('OES_texture_float_linear');\n};\n\n// ### GL.Texture.canUseFloatingPointTextures()\n//\n// Returns false if `gl.HALF_FLOAT_OES` is not supported as a texture type.\n// This is the `OES_texture_half_float` extension.\nTexture.canUseHalfFloatingPointTextures = function() {\n  return !!gl.getExtension('OES_texture_half_float');\n};\n\n// ### GL.Texture.canUseFloatingPointLinearFiltering()\n//\n// Returns false if `gl.LINEAR` is not supported as a texture filter mode for\n// textures of type `gl.HALF_FLOAT_OES`. This is the\n// `OES_texture_half_float_linear` extension.\nTexture.canUseHalfFloatingPointLinearFiltering = function() {\n  return !!gl.getExtension('OES_texture_half_float_linear');\n};\n\n// src/vector.js\n// Provides a simple 3D vector class. Vector operations can be done using member\n// functions, which return new vectors, or static functions, which reuse\n// existing vectors to avoid generating garbage.\nfunction Vector(x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n}\n\n// ### Instance Methods\n// The methods `add()`, `subtract()`, `multiply()`, and `divide()` can all\n// take either a vector or a number as an argument.\nVector.prototype = {\n  negative: function() {\n    return new Vector(-this.x, -this.y, -this.z);\n  },\n  add: function(v) {\n    if (v instanceof Vector) return new Vector(this.x + v.x, this.y + v.y, this.z + v.z);\n    else return new Vector(this.x + v, this.y + v, this.z + v);\n  },\n  subtract: function(v) {\n    if (v instanceof Vector) return new Vector(this.x - v.x, this.y - v.y, this.z - v.z);\n    else return new Vector(this.x - v, this.y - v, this.z - v);\n  },\n  multiply: function(v) {\n    if (v instanceof Vector) return new Vector(this.x * v.x, this.y * v.y, this.z * v.z);\n    else return new Vector(this.x * v, this.y * v, this.z * v);\n  },\n  divide: function(v) {\n    if (v instanceof Vector) return new Vector(this.x / v.x, this.y / v.y, this.z / v.z);\n    else return new Vector(this.x / v, this.y / v, this.z / v);\n  },\n  equals: function(v) {\n    return this.x == v.x && this.y == v.y && this.z == v.z;\n  },\n  dot: function(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  cross: function(v) {\n    return new Vector(\n      this.y * v.z - this.z * v.y,\n      this.z * v.x - this.x * v.z,\n      this.x * v.y - this.y * v.x\n    );\n  },\n  length: function() {\n    return Math.sqrt(this.dot(this));\n  },\n  unit: function() {\n    return this.divide(this.length());\n  },\n  min: function() {\n    return Math.min(Math.min(this.x, this.y), this.z);\n  },\n  max: function() {\n    return Math.max(Math.max(this.x, this.y), this.z);\n  },\n  toAngles: function() {\n    return {\n      theta: Math.atan2(this.z, this.x),\n      phi: Math.asin(this.y / this.length())\n    };\n  },\n  angleTo: function(a) {\n    return Math.acos(this.dot(a) / (this.length() * a.length()));\n  },\n  toArray: function(n) {\n    return [this.x, this.y, this.z].slice(0, n || 3);\n  },\n  clone: function() {\n    return new Vector(this.x, this.y, this.z);\n  },\n  init: function(x, y, z) {\n    this.x = x; this.y = y; this.z = z;\n    return this;\n  }\n};\n\n// ### Static Methods\n// `Vector.randomDirection()` returns a vector with a length of 1 and a\n// statistically uniform direction. `Vector.lerp()` performs linear\n// interpolation between two vectors.\nVector.negative = function(a, b) {\n  b.x = -a.x; b.y = -a.y; b.z = -a.z;\n  return b;\n};\nVector.add = function(a, b, c) {\n  if (b instanceof Vector) { c.x = a.x + b.x; c.y = a.y + b.y; c.z = a.z + b.z; }\n  else { c.x = a.x + b; c.y = a.y + b; c.z = a.z + b; }\n  return c;\n};\nVector.subtract = function(a, b, c) {\n  if (b instanceof Vector) { c.x = a.x - b.x; c.y = a.y - b.y; c.z = a.z - b.z; }\n  else { c.x = a.x - b; c.y = a.y - b; c.z = a.z - b; }\n  return c;\n};\nVector.multiply = function(a, b, c) {\n  if (b instanceof Vector) { c.x = a.x * b.x; c.y = a.y * b.y; c.z = a.z * b.z; }\n  else { c.x = a.x * b; c.y = a.y * b; c.z = a.z * b; }\n  return c;\n};\nVector.divide = function(a, b, c) {\n  if (b instanceof Vector) { c.x = a.x / b.x; c.y = a.y / b.y; c.z = a.z / b.z; }\n  else { c.x = a.x / b; c.y = a.y / b; c.z = a.z / b; }\n  return c;\n};\nVector.cross = function(a, b, c) {\n  c.x = a.y * b.z - a.z * b.y;\n  c.y = a.z * b.x - a.x * b.z;\n  c.z = a.x * b.y - a.y * b.x;\n  return c;\n};\nVector.unit = function(a, b) {\n  var length = a.length();\n  b.x = a.x / length;\n  b.y = a.y / length;\n  b.z = a.z / length;\n  return b;\n};\nVector.fromAngles = function(theta, phi) {\n  return new Vector(Math.cos(theta) * Math.cos(phi), Math.sin(phi), Math.sin(theta) * Math.cos(phi));\n};\nVector.randomDirection = function() {\n  return Vector.fromAngles(Math.random() * Math.PI * 2, Math.asin(Math.random() * 2 - 1));\n};\nVector.min = function(a, b) {\n  return new Vector(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z));\n};\nVector.max = function(a, b) {\n  return new Vector(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z));\n};\nVector.lerp = function(a, b, fraction) {\n  return b.subtract(a).multiply(fraction).add(a);\n};\nVector.fromArray = function(a) {\n  return new Vector(a[0], a[1], a[2]);\n};\nVector.angleBetween = function(a, b) {\n  return a.angleTo(b);\n};\n\nreturn GL;\n})();\n\nexport default GL;\n","/**\n * BubbleScript\n *\n * Copyright 2019 Yuchen Wang\n */\n\nimport GL from \"./lightgl.js\"\n\nexport const PI = 3.141592653589793;\nexport const G = new GL.Vector(0.0, -9.8, 0.0);\nexport const WaterDensity = 1.0;\nexport const ObjectDensity = 0.93;\nexport const BubbleDensity = 0.89;\n","/**\n * BubbleScript\n *\n * Copyright 2019 Yuchen Wang\n *\n */\n\nimport GL from \"./lightgl.js\"\nimport {PI, G, WaterDensity, BubbleDensity} from \"./constants\"\n\nfunction Bubble(_center, _radius, _initVelocity) {\n  this.oldCenter = this.center = _center;\n  this.radius = _radius;\n  this.velocity = _initVelocity;\n}\n\nBubble.prototype.updateCenter = function(_newCenter) {\n  this.oldCenter = this.center;\n  this.center = _newCenter;\n}\n\nBubble.prototype.updateVelocity = function(_velocity) {\n  this.velocity = _velocity;\n}\n\nBubble.prototype.simulate = function(_delta) {\n  var percentUnderWater = Math.max(0, Math.min(1, (this.radius - this.center.y) / (2.0 * this.radius)));\n\n  this.velocity = \n    this.velocity.add(G.multiply(_delta - WaterDensity / BubbleDensity * _delta * percentUnderWater));\n  this.velocity = \n    this.velocity.subtract(this.velocity.unit().multiply(percentUnderWater * _delta * this.velocity.dot(this.velocity)));\n  this.center = this.center.add(this.velocity.multiply(_delta));\n\n  this.radius = (1.0 + 0.005 * _delta) * this.radius;\n\n  // Bounce off the bottom\n  if (this.center.y < this.radius - 1) {\n    this.center.y = this.radius - 1;\n    this.velocity.y = Math.abs(this.velocity.y) * 0.75;\n  }\n}\n\nBubble.prototype.getVolume = function() {\n  return 4.0 * PI * Math.pow(this.radius, 3.0) / 3.0;\n}\n\nexport default Bubble;\n","/*\n * BubbleScript\n *\n * Copyright 2011 Evan Wallace\n * Copyright 2019 Yuchen Wang\n * Released under the MIT license\n */\n\nimport GL from \"./lightgl.js\"\nimport { gl } from \"./main.js\"\n\nfunction Cubemap(images) {\n  this.id = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.id);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n  gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, images.xneg);\n  gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, images.xpos);\n  gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, images.yneg);\n  gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, images.ypos);\n  gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, images.zneg);\n  gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, images.zpos);\n}\n\nCubemap.prototype.bind = function(unit) {\n    gl.activeTexture(gl.TEXTURE0 + (unit || 0));\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.id);\n};\n\nCubemap.prototype.unbind = function(unit) {\n    gl.activeTexture(gl.TEXTURE0 + (unit || 0));\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n};\n\nexport default Cubemap;\n","/*\n * BubbleScript\n *\n * Copyright 2011 Evan Wallace\n * Copyright 2019 Yuchen Wang\n * Released under the MIT license\n */\n\nimport GL from \"./lightgl.js\"\nimport { gl } from \"./main.js\"\nimport { water } from \"./main.js\"\n\nimport bubbleVertexShader from \"../shaders/bubblevertexshader.glsl\"\nimport bubbleFragmentShader from \"../shaders/bubblefragmentshader.glsl\"\nimport causticsVertexShader from \"../shaders/causticsvertexshader.glsl\"\nimport causticsFragmentShader from \"../shaders/causticsfragmentshader.glsl\"\nimport cubeVertexShader from \"../shaders/cubevertexshader.glsl\"\nimport cubeFragmentShader from \"../shaders/cubefragmentshader.glsl\"\nimport sphereVertexShader from \"../shaders/spherevertexshader.glsl\"\nimport sphereFragmentShader from \"../shaders/spherefragmentshader.glsl\"\nimport waterVertexShader from \"../shaders/watervertexshader.glsl\"\nimport waterFragmentShader from \"../shaders/waterfragmentshader.glsl\"\n\nfunction Renderer() {\n  this.tileTexture = GL.Texture.fromImage(document.getElementById('tiles'), {\n    minFilter: gl.LINEAR_MIPMAP_LINEAR,\n    wrap: gl.REPEAT,\n    format: gl.RGB\n  });\n  this.lightDir = new GL.Vector(2.0, 2.0, -1.0).unit();\n  this.waterMesh = GL.Mesh.plane({ detail: 200 });\n  this.waterShaders = [];\n  for (var i = 0; i < 2; i++) {\n    this.waterShaders[i] = new GL.Shader(waterVertexShader, waterFragmentShader);\n  }\n  this.sphereMesh = GL.Mesh.sphere({ detail: 10 });\n  this.sphereShader = new GL.Shader(sphereVertexShader, sphereFragmentShader);\n\n  this.bubbleMesh = GL.Mesh.sphere({detail : 10});\n  this.bubbleShader = new GL.Shader(bubbleVertexShader, bubbleFragmentShader);\n\n  this.cubeMesh = GL.Mesh.cube();\n  this.cubeMesh.triangles.splice(4, 2);\n  this.cubeMesh.compile();\n  this.cubeShader = new GL.Shader(cubeVertexShader, cubeFragmentShader);\n\n  this.causticTex = new GL.Texture(1024, 1024);\n  var hasDerivatives = !!gl.getExtension('OES_standard_derivatives');\n  this.causticsShader = new GL.Shader(causticsVertexShader, causticsFragmentShader);\n}\n\nRenderer.prototype.updateCaustics = function(water, sphere) {\n  if (!this.causticsShader) return;\n  var hasDerivatives = !!gl.getExtension('OES_standard_derivatives');\n  var this_ = this;\n  this.causticTex.drawTo(function() {\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    water.textureA.bind(0);\n    this_.causticsShader.uniforms({\n      light: this_.lightDir,\n      water: 0,\n      sphereCenter: sphere.center,\n      sphereRadius: sphere.radius,\n      hasDerivatives: hasDerivatives\n    }).draw(this_.waterMesh);\n  });\n};\n\nRenderer.prototype.renderWater = function(water, sky, sphere) {\n  var tracer = new GL.Raytracer();\n  water.textureA.bind(0);\n  this.tileTexture.bind(1);\n  sky.bind(2);\n  this.causticTex.bind(3);\n  gl.enable(gl.CULL_FACE);\n  for (var i = 0; i < 2; i++) {\n    gl.cullFace(i ? gl.BACK : gl.FRONT);\n    this.waterShaders[i].uniforms({\n      light: this.lightDir,\n      water: 0,\n      tiles: 1,\n      sky: 2,\n      causticTex: 3,\n      eye: tracer.eye,\n      isUnderWater: i,\n      sphereCenter: sphere.center,\n      sphereRadius: sphere.radius\n    }).draw(this.waterMesh);\n  }\n  gl.disable(gl.CULL_FACE);\n};\n\nRenderer.prototype.renderBubble = function(sky, bubble) {\n  var tracer = new GL.Raytracer();\n  water.textureA.bind(0);\n  this.tileTexture.bind(1);\n  sky.bind(2);\n  this.causticTex.bind(3);\n  gl.enable(gl.CULL_FACE);\n  this.bubbleShader.uniforms({\n    light: this.lightDir,\n    water: 0,\n    tiles: 1,\n    sky: 2,\n    causticTex: 3,\n    eye: tracer.eye,\n    sphereCenter: bubble.center,\n    sphereRadius: bubble.radius\n  }).draw(this.sphereMesh);\n};\n\nRenderer.prototype.renderSphere = function(sphere) {\n  water.textureA.bind(0);\n  this.causticTex.bind(1);\n  this.sphereShader.uniforms({\n    light: this.lightDir,\n    water: 0,\n    causticTex: 1,\n    sphereCenter: sphere.center,\n    sphereRadius: sphere.radius\n  }).draw(this.sphereMesh);\n};\n\nRenderer.prototype.renderCube = function(sphere) {\n  gl.enable(gl.CULL_FACE);\n  water.textureA.bind(0);\n  this.tileTexture.bind(1);\n  this.causticTex.bind(2);\n  this.cubeShader.uniforms({\n    light: this.lightDir,\n    water: 0,\n    tiles: 1,\n    causticTex: 2,\n    sphereCenter: sphere.center,\n    sphereRadius: sphere.radius\n  }).draw(this.cubeMesh);\n  gl.disable(gl.CULL_FACE);\n};\n\nexport default Renderer;\n","/**\n * Bubble Script\n *\n * Copyright 2019 Yuchen Wang\n */\n\nimport GL from \"./lightgl.js\"\nimport {PI, G, WaterDensity, ObjectDensity} from \"./constants.js\"\n\nfunction Sphere(_center, _radius, _initVelocity) {\n  this.oldCenter = this.center = _center;\n  this.radius = _radius;\n  this.velocity = _initVelocity;\n}\n\nSphere.prototype.updateCenter = function(_newCenter) {\n  this.oldCenter = this.center;\n  this.center = _newCenter;\n}\n\nSphere.prototype.updateVelocity = function(_velocity) {\n  this.velocity = _velocity;\n}\n\nSphere.prototype.simulate = function(_delta) {\n  var percentUnderWater = Math.max(0, Math.min(1, (this.radius - this.center.y) / (2.0 * this.radius)));\n\n  this.velocity = \n    this.velocity.add(G.multiply(_delta - WaterDensity / ObjectDensity * _delta * percentUnderWater));\n  this.velocity = \n    this.velocity.subtract(this.velocity.unit().multiply(percentUnderWater * _delta * this.velocity.dot(this.velocity)));\n  this.center = this.center.add(this.velocity.multiply(_delta));\n\n  // Bounce off the bottom\n  if (this.center.y < this.radius - 1) {\n    this.center.y = this.radius - 1;\n    this.velocity.y = Math.abs(this.velocity.y) * 0.75;\n  }\n}\n\nSphere.prototype.getVolume = function() {\n  return 4.0 * PI * this.radius * this.radius * this.radius / 3.0;\n}\n\nexport default Sphere;\n","/*\n * BubbleScript\n *\n * Copyright 2011 Evan Wallace\n * Copyright 2019 Yuchen Wang\n * Released under the MIT license\n */\n\nimport GL from \"./lightgl.js\"\nimport { gl } from \"./main.js\"\n\nimport dropFragmentShader from \"../shaders/dropfragmentshader.glsl\"\nimport normalFragmentShader from \"../shaders/normalfragmentshader.glsl\"\nimport moveBubbleFragmentShader from \"../shaders/movebubblefragmentshader.glsl\"\nimport moveSphereFragmentShader from \"../shaders/movespherefragmentshader.glsl\"\nimport removeBubbleFragmentShader from \"../shaders/removebubblefragmentshader.glsl\"\nimport updateFragmentShader from \"../shaders/updatefragmentshader.glsl\"\nimport vertexShader from \"../shaders/basevertexshader.glsl\"\n\n// The data in the texture is (position.y, velocity.y, normal.x, normal.z)\nfunction Water() {\n  this.plane = GL.Mesh.plane();\n  if (!GL.Texture.canUseFloatingPointTextures()) {\n    throw new Error('This demo requires the OES_texture_float extension');\n  }\n  var filter = GL.Texture.canUseFloatingPointLinearFiltering() ? gl.LINEAR : gl.NEAREST;\n  this.textureA = new GL.Texture(256, 256, { type: gl.FLOAT, filter: filter });\n  this.textureB = new GL.Texture(256, 256, { type: gl.FLOAT, filter: filter });\n  if ((!this.textureA.canDrawTo() || !this.textureB.canDrawTo()) && GL.Texture.canUseHalfFloatingPointTextures()) {\n    filter = GL.Texture.canUseHalfFloatingPointLinearFiltering() ? gl.LINEAR : gl.NEAREST;\n    this.textureA = new GL.Texture(256, 256, { type: gl.HALF_FLOAT_OES, filter: filter });\n    this.textureB = new GL.Texture(256, 256, { type: gl.HALF_FLOAT_OES, filter: filter });\n  }\n  this.dropShader = new GL.Shader(vertexShader, dropFragmentShader);\n  this.updateShader = new GL.Shader(vertexShader, updateFragmentShader);\n  this.normalShader = new GL.Shader(vertexShader, normalFragmentShader);\n  this.sphereShader = new GL.Shader(vertexShader, moveSphereFragmentShader);\n  this.bubbleShader = new GL.Shader(vertexShader, moveBubbleFragmentShader);\n  this.removeBubbleShader = new GL.Shader(vertexShader, removeBubbleFragmentShader);\n}\n\nWater.prototype.addDrop = function(x, y, radius, strength) {\n  var this_ = this;\n  this.textureB.drawTo(function() {\n    this_.textureA.bind();\n    this_.dropShader.uniforms({\n      center: [x, y],\n      radius: radius,\n      strength: strength\n    }).draw(this_.plane);\n  });\n  this.textureB.swapWith(this.textureA);\n};\n\nWater.prototype.removeBubble = function(bubble) {\n  var this_ = this;\n  this.textureB.drawTo(function() {\n    this_.textureA.bind();\n    this_.removeBubbleShader.uniforms({\n      oldCenter: bubble.oldCenter,\n      newCenter: bubble.center,\n      radius: bubble.radius,\n    }).draw(this_.plane);\n  });\n  this.textureB.swapWith(this.textureA);\n}\n\nWater.prototype.moveSingleBubble = function(bubble, sphere) {\n  var this_ = this;\n  this.textureB.drawTo(function() {\n    this_.textureA.bind();\n    this_.bubbleShader.uniforms({\n      oldCenter: bubble.oldCenter,\n      newCenter: bubble.center,\n      radius: bubble.radius,\n    }).draw(this_.plane);\n  });\n  this.textureB.swapWith(this.textureA);\n\n  var center = bubble.center;\n  var radius = bubble.radius;\n  if ( center.subtract(sphere.center).length < radius + sphere.radius\n    || center.y + radius > 0.01 * radius\n    || center.x - radius < -1.0\n    || center.z - radius < -1.0\n    || 1.0 - center.x < radius\n    || 1.0 - center.z < radius) {\n    this.removeBubble(bubble);\n    return true;\n  }\n\n  return false;\n}\n\nWater.prototype.moveSphere = function(sphere) {\n  var this_ = this;\n  this.textureB.drawTo(function() {\n    this_.textureA.bind();\n    this_.sphereShader.uniforms({\n      oldCenter: sphere.oldCenter,\n      newCenter: sphere.center,\n      radius: sphere.radius\n    }).draw(this_.plane);\n  });\n  this.textureB.swapWith(this.textureA);\n};\n\nWater.prototype.stepSimulation = function() {\n  var this_ = this;\n  this.textureB.drawTo(function() {\n    this_.textureA.bind();\n    this_.updateShader.uniforms({\n      delta: [1 / this_.textureA.width, 1 / this_.textureA.height]\n    }).draw(this_.plane);\n  });\n  this.textureB.swapWith(this.textureA);\n};\n\nWater.prototype.updateNormals = function() {\n  var this_ = this;\n  this.textureB.drawTo(function() {\n    this_.textureA.bind();\n    this_.normalShader.uniforms({\n      delta: [1 / this_.textureA.width, 1 / this_.textureA.height]\n    }).draw(this_.plane);\n  });\n  this.textureB.swapWith(this.textureA);\n};\n\nexport default Water;\n","/*\n * BubbleScript\n *\n * Copyright 2011 Evan Wallace\n * Copyright 2019 Yuchen Wang\n * Released under the MIT license\n */\n\nimport Bubble from \"./bubble.js\"\nimport Cubemap from \"./cubemap.js\"\nimport GL from \"./lightgl.js\"\nimport Renderer from \"./renderer.js\"\nimport Sphere from \"./sphere.js\"\nimport Water from \"./water.js\"\n\nfunction text2html(text) {\n  return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\n/g, '<br>');\n}\n\nfunction handleError(text) {\n  var html = text2html(text);\n  if (html == 'WebGL not supported') {\n    html = 'Your browser does not support WebGL.<br>Please see\\\n    <a href=\"http://www.khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\">\\\n    Getting a WebGL Implementation</a>.';\n  }\n  var loading = document.getElementById('loading');\n  loading.innerHTML = html;\n  loading.style.zIndex = 1;\n}\n\nwindow.onerror = handleError;\n\nexport var gl = GL.create();\nexport var water;\nvar cubemap;\nvar renderer;\nvar angleX = -25;\nvar angleY = -200.5;\n\n// Sphere physics info\nvar useSpherePhysics = false;\nvar paused = false;\nvar sphere;\n\nvar bubbles;\nvar timeStamp;\nvar vrDisplay;\nvar frameData = new VRFrameData()\n\n\nconsole.log('out of function')\n\nwindow.onload = function() {\n\n  navigator.getVRDisplays().then(displays => {\n    // Filter down to devices that can present.\n    displays = displays.filter(display => display.capabilities.canPresent);\n\n    // If there are no devices available, quit out.\n    if (displays.length === 0) {\n      console.warn('No devices available able to present.');\n      return;\n    }\n    \n    \n    // Store the first display we find. A more production-ready version should\n    // allow the user to choose from their available displays.\n    vrDisplay = displays[0];\n    //console.log(vrDisplay);\n\n    vrDisplay.requestPresent([{ source: gl.canvas}]).then( function () {\n\n      console.log('request Present done.');\n      drawVR();\n    });\n  });\n\n\n};\n\n function animate() {\n    var nextTime = new Date().getTime();\n    if (!paused) {\n      update((nextTime - prevTime) / 1000);\n      draw();\n    }\n    prevTime = nextTime;\n    requestAnimationFrame(animate);\n  }\n\n\nvar vrSceneFrame;\nfunction drawVR() {\n  console.log('draw VR!')\n  var ratio = window.devicePixelRatio || 1;\n  var help = document.getElementById('help');\n\n  function Matrixrize(lm){\n    return  new GL.Matrix([lm[0], lm[1], lm[2], lm[3], lm[4], lm[5], lm[6], lm[7], lm[8], lm[9], lm[10], lm[11], lm[12], lm[13], lm[14], lm[15]]).transpose();\n  };\n  \n\n  function onresize() {\n    vrDisplay.getFrameData(frameData);\n    //console.log('frameData');\n    //console.log(frameData);\n    console.log('onresize');\n    const animating = () => {\n      console.log('animating');\n      var nextTime = new Date().getTime();\n      if (!paused) {\n        update((nextTime - prevTime) / 1000);\n        draw();\n      }\n      prevTime = nextTime;\n      vrSceneFrame = vrDisplay.requestAnimationFrame(animating);\n      const leftProjectionMatrix = frameData.leftProjectionMatrix;\n      const leftViewMatrix = frameData.leftViewMatrix;\n      const rightProjectionMatrix = frameData.rightProjectionMatrix;\n      const rightViewMatrix = frameData.rightViewMatrix;\n    \n      var width = innerWidth - help.clientWidth - 20;\n      var height = innerHeight;\n\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n\n\n      /*left*/\n      var leftpjm = Matrixrize(leftProjectionMatrix);\n    \n      var leftvwm = Matrixrize(leftViewMatrix);\n\n      gl.canvas.width = width * ratio;\n      gl.canvas.height = height * ratio;\n      gl.canvas.style.width = width + 'px';\n      gl.canvas.style.height = height + 'px';\n\n      gl.viewport(0, 0, gl.canvas.width*0.5, gl.canvas.height);\n      gl.loadIdentity();\n\n      gl.translate(0, 0, -4);\n      gl.rotate(-angleX, 1, 0, 0);\n      gl.rotate(-angleY, 0, 1, 0);\n      gl.translate(0, 0.5, 0);\n    \n      gl.multMatrix(leftvwm);\n\n\n      /********************************* Projection Mode *****************************************/\n      gl.matrixMode(gl.PROJECTION);\n      gl.loadIdentity();\n      //gl.perspective(45, gl.canvas.width*0.5 / gl.canvas.height, 0.01, 100);\n      gl.multMatrix(leftpjm);\n      /********************************************************************************************/  \n\n      gl.matrixMode(gl.MODELVIEW);\n\n      draw(true);\n\n      /*right*/\n        \n      var rightpjm = Matrixrize(rightProjectionMatrix);\n      //console.log(rightpjm)\n    \n      var rightvwm = Matrixrize(rightViewMatrix);\n      //console.log(rightvwm)\n\n      gl.viewport(gl.canvas.width*0.5, 0, gl.canvas.width*0.5, gl.canvas.height);\n      gl.loadIdentity();\n      gl.translate(0, 0, -4);\n      gl.rotate(-angleX, 1, 0, 0);\n      gl.rotate(-angleY, 0, 1, 0);\n      gl.translate(0, 0.5, 0);\n      gl.multMatrix(rightvwm);\n      gl.matrixMode(gl.PROJECTION); \n      gl.loadIdentity();\n      //gl.perspective(45, gl.canvas.width*0.5 / gl.canvas.height, 0.01, 100);\n      gl.multMatrix(rightpjm);\n      gl.matrixMode(gl.MODELVIEW);\n      draw(false);\n      vrDisplay.getFrameData(frameData);\n      vrDisplay.submitFrame();  \n      }\n      animating();\n  }\n\n  document.body.appendChild(gl.canvas);\n  gl.clearColor(0, 0, 0, 1);\n\n  water = new Water();\n  renderer = new Renderer();\n  cubemap = new Cubemap({\n    xneg: document.getElementById('xneg'),\n    xpos: document.getElementById('xpos'),\n    yneg: document.getElementById('ypos'),\n    ypos: document.getElementById('ypos'),\n    zneg: document.getElementById('zneg'),\n    zpos: document.getElementById('zpos')\n  });\n\n  if (!water.textureA.canDrawTo() || !water.textureB.canDrawTo()) {\n    throw new Error('Rendering to floating-point textures is required but not supported');\n  }\n\n  sphere = new Sphere(\n    new GL.Vector(-0.4, -0.75, 0.2),\n    0.25,\n    new GL.Vector(),\n  );\n\n  bubbles = [];\n  timeStamp = 0;\n\n  for (var i = 0; i < 20; i++) {\n    water.addDrop(Math.random() * 2 - 1, Math.random() * 2 - 1, 0.03, (i & 1) ? 0.01 : -0.01);\n  }\n\n  document.getElementById('loading').innerHTML = '';\n  onresize();\n\n  var requestAnimationFrame =\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    function(callback) { setTimeout(callback, 0); };\n\n  var prevTime = new Date().getTime();\n  /*\n  function animate() {\n    var nextTime = new Date().getTime();\n    if (!paused) {\n      update((nextTime - prevTime) / 1000);\n      draw();\n    }\n    prevTime = nextTime;\n    requestAnimationFrame(animate);\n  }*/\n  window.onresize = onresize;\n\n  var prevHit;\n  var planeNormal;\n  var mode = -1;\n  var MODE_ADD_DROPS = 0;\n  var MODE_MOVE_SPHERE = 1;\n  var MODE_ORBIT_CAMERA = 2;\n\n  var oldX, oldY;\n\n  function startDrag(x, y) {\n    oldX = x;\n    oldY = y;\n    var tracer = new GL.Raytracer();\n    var ray = tracer.getRayForPixel(x * ratio, y * ratio);\n    var pointOnPlane = tracer.eye.add(ray.multiply(-tracer.eye.y / ray.y));\n    var sphereHitTest = GL.Raytracer.hitTestSphere(tracer.eye, ray, sphere.center, sphere.radius);\n    if (sphereHitTest) {\n      mode = MODE_MOVE_SPHERE;\n      prevHit = sphereHitTest.hit;\n      planeNormal = tracer.getRayForPixel(gl.canvas.width / 2, gl.canvas.height / 2).negative();\n    } else if (Math.abs(pointOnPlane.x) < 1 && Math.abs(pointOnPlane.z) < 1) {\n      mode = MODE_ADD_DROPS;\n      duringDrag(x, y);\n    } else {\n      mode = MODE_ORBIT_CAMERA;\n    }\n  }\n\n  function duringDrag(x, y) {\n    switch (mode) {\n      case MODE_ADD_DROPS: {\n        var tracer = new GL.Raytracer();\n        var ray = tracer.getRayForPixel(x * ratio, y * ratio);\n        var pointOnPlane = tracer.eye.add(ray.multiply(-tracer.eye.y / ray.y));\n        water.addDrop(pointOnPlane.x, pointOnPlane.z, 0.03, 0.01);\n        if (paused) {\n          water.updateNormals();\n          // renderer.updateCaustics(water, sphere);\n        }\n        break;\n      }\n      case MODE_MOVE_SPHERE: {\n        var tracer = new GL.Raytracer();\n        var ray = tracer.getRayForPixel(x * ratio, y * ratio);\n        var t = -planeNormal.dot(tracer.eye.subtract(prevHit)) / planeNormal.dot(ray);\n        var nextHit = tracer.eye.add(ray.multiply(t));\n\n        var radius = sphere.radius;\n        sphere.center = sphere.center.add(nextHit.subtract(prevHit));\n        sphere.center.x = Math.max(radius - 1, Math.min(1 - radius, sphere.center.x));\n        sphere.center.y = Math.max(radius - 1, Math.min(10, sphere.center.y));\n        sphere.center.z = Math.max(radius - 1, Math.min(1 - radius, sphere.center.z));\n        prevHit = nextHit;\n        // if (paused) renderer.updateCaustics(water, sphere);\n        break;\n      }\n      case MODE_ORBIT_CAMERA: {\n        angleY -= x - oldX;\n        angleX -= y - oldY;\n        angleX = Math.max(-89.999, Math.min(89.999, angleX));\n        break;\n      }\n    }\n    oldX = x;\n    oldY = y;\n    if (paused) draw();\n  }\n\n  function stopDrag() {\n    mode = -1;\n  }\n\n  function isHelpElement(element) {\n    return element === help || element.parentNode && isHelpElement(element.parentNode);\n  }\n\n  document.onmousedown = function(e) {\n    if (!isHelpElement(e.target)) {\n      e.preventDefault();\n      startDrag(e.pageX, e.pageY);\n    }\n  };\n\n  document.onmousemove = function(e) {\n    duringDrag(e.pageX, e.pageY);\n  };\n\n  document.onmouseup = function() {\n    stopDrag();\n  };\n\n  document.ontouchstart = function(e) {\n    if (e.touches.length === 1 && !isHelpElement(e.target)) {\n      e.preventDefault();\n      startDrag(e.touches[0].pageX, e.touches[0].pageY);\n    }\n  };\n\n  document.ontouchmove = function(e) {\n    if (e.touches.length === 1) {\n      duringDrag(e.touches[0].pageX, e.touches[0].pageY);\n    }\n  };\n\n  document.ontouchend = function(e) {\n    if (e.touches.length == 0) {\n      stopDrag();\n    }\n  };\n\n  document.onkeydown = function(e) {\n    if (e.which == ' '.charCodeAt(0)) paused = !paused;\n    else if (e.which == 'G'.charCodeAt(0)) useSpherePhysics = !useSpherePhysics;\n    else if (e.which == 'L'.charCodeAt(0) && paused) draw();\n    else if (e.which == 'B'.charCodeAt(0)) addBubble();\n  };\n\n  var frame = 0;\n\n  function addBubble() {\n    bubbles.push (new Bubble(\n      new GL.Vector(-0.9 + 1.8 * Math.random(), -1.0, -0.9 + 1.8 * Math.random()),\n      0.1 * Math.random(),\n      new GL.Vector(0.0, 0.0, 0.0)\n    ));\n  }\n\n  function update(seconds) {\n    if (seconds > 1) return;\n    frame += seconds * 2;\n\n\n    if (mode == MODE_MOVE_SPHERE) {\n      // Start from rest when the player releases the mouse after moving the sphere\n      sphere.updateVelocity(new GL.Vector());\n    } else if (useSpherePhysics) {\n      sphere.simulate(seconds);\n\n      bubbles.forEach(function(bubble) {\n        bubble.simulate(seconds);\n      });\n\n      if (timeStamp == 0) {\n        //addBubble();\n      }\n      timeStamp = (timeStamp + 1) % 20;\n    }\n\n    // Displace water around the sphere\n    water.moveSphere(sphere);\n    sphere.updateCenter(sphere.center);\n\n    var aliveBubbles = []\n    // Simulate bubble in water\n    bubbles.forEach(function(bubble) {\n      var isAlive = !water.moveSingleBubble(bubble, sphere);\n      bubble.updateCenter(bubble.center);\n\n      if (isAlive) {\n        aliveBubbles.push(bubble);\n      }\n    });\n    bubbles = aliveBubbles;\n\n    // Update the water simulation and graphics\n    water.stepSimulation();\n    water.updateNormals();\n    // renderer.updateCaustics(water, sphere);\n  }\n\n  function draw(clear=false) {\n    // Change the light direction to the camera look vector when the L key is pressed\n    if (GL.keys.L) {\n      renderer.lightDir = GL.Vector.fromAngles((90 - angleY) * Math.PI / 180, -angleX * Math.PI / 180);\n      // if (paused) renderer.updateCaustics(water, sphere);\n    }\n    if (clear){\n      //console.log('gl.clear')\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n    gl.enable(gl.DEPTH_TEST);\n    bubbles.forEach(function(bubble) {\n      renderer.renderBubble(cubemap, bubble);\n    })\n    renderer.renderCube(sphere);\n    renderer.renderWater(water, cubemap, sphere);\n    renderer.renderSphere(sphere);\n    gl.disable(gl.DEPTH_TEST);\n  }\n\n\n\n};\n"],"sourceRoot":""}